<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>ITE BACK OFFICE MANAGEMENT</title>
    <link rel="stylesheet" type="text/css"
        href="https://cdnjs.cloudflare.com/ajax/libs/extjs/6.0.0/classic/theme-neptune/resources/theme-neptune-all.css" />
    <script src="https://kit.fontawesome.com/ade53cd309.js" crossorigin="anonymous"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/extjs/6.0.0/ext-all.js"></script>
    <style>
        .x-grid-cell-inner {
            overflow: hidden;
            padding: 10px 6px;
            white-space: nowrap;
        }

        .fieldClass {
            border-bottom: 1px dashed rgb(173, 173, 173);
            padding: 7px 0px;
        }

        .a {
            display: block;
        }

        .a span {
            background-color: rgb(253, 253, 253);
            padding: 2px;
            color: black;
        }
    </style>
    <script type="text/javascript">
        //=========================================================================================================
        //		           APPLICATION START
        // ========================================================================================================
        Ext.onReady(() => {
            let edit = false;
            Ext.define('MyApp.view.Form', {
                extend: 'Ext.form.Panel',
                xtype: 'my-form',

            });

            var serieId = sessionStorage.getItem('serieId')

            const relatedProducts = (products) => {
                let exist = false;

                for (const prod of products) {
                    if (prod.Type === "R") {
                        exist = true;
                    }
                }

                if (exist) {
                    return products.map((product) => {
                        if (product.Type === "R") {
                            let description = product.Description ? product.Description : "N/A";
                            return {
                                xtype: "button",
                                text: `${description} [${product.Code}]`,
                                cls: "a",
                                style: "border: none; margin: 2px 0px;",
                                handler: () => {
                                    Ext.getCmp("relatedProducts").removeAll();
                                    Ext.getCmp("relatedAccessories").removeAll();
                                    Ext.getCmp("relatedParts").removeAll();
                                    getProductDetails(product.LinkedProductID);
                                    productIDGlobal = product.LinkedProductID;
                                    Ext.getCmp("productDetails").setTitle(
                                        `PRODUCT DETAILS - ${product.Code}`
                                    );
                                    Ext.getCmp("viewport").setActiveItem("productDetails");
                                },
                            };
                        }
                    });
                } else {
                    return [
                        {
                            xtype: "displayfield",
                            fieldLabel: "<b>Result</b>",
                            value: "No Related Products",
                            labelWidth: 44,
                        },
                    ];
                }
            };

            const relatedAccessories = (products) => {
                let exist = false;

                for (const prod of products) {
                    if (prod.Type === "A") {
                        exist = true;
                    }
                }
                if (exist) {
                    return products.map((product) => {
                        if (product.Type === "A") {
                            let description = product.Description ? product.Description : "N/A";
                            return {
                                xtype: "button",
                                text: `${description} [${product.Code}]`,
                                cls: "a",
                                style: "border: none; margin: 2px 0px;",
                                handler: () => {
                                    Ext.getCmp("relatedProducts").removeAll();
                                    Ext.getCmp("relatedAccessories").removeAll();
                                    Ext.getCmp("relatedParts").removeAll();
                                    getProductDetails(product.LinkedProductID);
                                    productIDGlobal = product.LinkedProductID;
                                    Ext.getCmp("productDetails").setTitle(
                                        `PRODUCT DETAILS - ${product.Code}`
                                    );
                                    Ext.getCmp("viewport").setActiveItem("productDetails");
                                },
                            };
                        }
                    });
                } else {
                    return [
                        {
                            xtype: "displayfield",
                            fieldLabel: "<b>Result</b>",
                            value: "No Related Accessories",
                            labelWidth: 44,
                        },
                    ];
                }
            };

            const relatedParts = (products) => {
                let exist = false;

                for (const prod of products) {
                    if (prod.Type === "P") {
                        exist = true;
                    }
                }
                if (exist) {
                    return products.map((product) => {
                        if (product.Type === "P") {
                            let description = product.Description ? product.Description : "N/A";
                            return {
                                xtype: "button",
                                text: `${description} [${product.Code}]`,
                                cls: "a",
                                style: "border: none; margin: 2px 0px;",
                                handler: () => {
                                    Ext.getCmp("relatedProducts").removeAll();
                                    Ext.getCmp("relatedAccessories").removeAll();
                                    Ext.getCmp("relatedParts").removeAll();
                                    getProductDetails(product.LinkedProductID);
                                    productIDGlobal = product.LinkedProductID;
                                    Ext.getCmp("productDetails").setTitle(
                                        `PRODUCT DETAILS - ${product.Code}`
                                    );
                                    Ext.getCmp("viewport").setActiveItem("productDetails");
                                },
                            };
                        }
                    });
                } else {
                    return [
                        {
                            xtype: "displayfield",
                            fieldLabel: "<b>Result</b>",
                            value: "No Related Parts",
                            labelWidth: 44,
                        },
                    ];
                }
            };

            const getSerieDetails = (serieId) => {
                Ext.Ajax.request({
                    url: "/api/getSerieDetails",
                    method: "GET",
                    cors: true,
                    useDefaultXhrHeader: false,
                    params: {
                        serieId: sessionStorage.getItem('serieId'),
                    },

                    success: function (response) {
                        const res = JSON.parse(response.responseText);


                        if (edit === false) {
                            displaySerieInfo(res[0][0]);
                        } else {
                            getEditInfo(res[0][0]);
                        }

                        Ext.getCmp("relatedProducts").add(relatedProducts(res[1]));
                        Ext.getCmp("relatedAccessories").add(relatedAccessories(res[1]));
                        Ext.getCmp("relatedParts").add(relatedParts(res[1]));
                    },
                    failure: function (response) {
                        console.log("failed", response);
                    },
                });
            };


            const getEditInfo = (serie) => {
                console.log(serie)
                Ext.getCmp("Title").setValue(serie.Title);
                Ext.getCmp("Key").setValue(serie.Key);
                Ext.getCmp("FDesc").setValue(serie.FullDescription);
                Ext.getCmp("spec").setValue(serie.Specification);
            };


            const displaySerieInfo = (serie) => {
                Ext.getCmp("key").setValue(serie.Key);
                Ext.getCmp("title").setValue(serie.Title);
                Ext.getCmp("fullDescription").setValue(
                    serie.FullDescription ?? "No Full Description"
                );
                Ext.getCmp("specification").setValue(
                    serie.Specification ?? "No Specification"
                );
            };

            const setPanelHidden = () => {
                Ext.getCmp("DEFIELD").setHidden(true);
                Ext.getCmp("FRFIELD").setHidden(true);
                Ext.getCmp("SPFIELD").setHidden(true);
                Ext.getCmp("RUFIELD").setHidden(true);
            }

            const getOtherLanguageDetail = (language) => {

                Ext.Ajax.request({
                    url: "/api/getOtherLanguageDetailSerie",
                    method: "POST",
                    cors: true,
                    useDefaultXhrHeader: false,
                    params: {
                        language: language,
                        serieId: sessionStorage.getItem('serieId'),
                    },
                    success: function (response) {
                        const res = JSON.parse(response.responseText);
                        Ext.getCmp(`${language.toUpperCase()}Title`).setValue(res[0].Title);
                        Ext.getCmp(`${language.toUpperCase()}FDesc`).setValue(res[0].FullDescription);
                        Ext.getCmp(`${language.toUpperCase()}spec`).setValue(res[0].Specification);
                    },
                    failure: function (response) {
                        console.log("failed", response);
                    },
                });
            }

            getSerieDetails(sessionStorage.getItem('serieIDGlobal'))
            const SerieDetails = Ext.create("Ext.panel.Panel", {
                id: "SerieDetails",
                title: "SERIE DETAILS",
                flex: 1,
                trackOver: true,
                loadMask: true,
                header: true,
                scrollable: true,
                layout: "border",
                items: [
                    {
                        xtype: "container",
                        width: 420,
                        scrollable: true,
                        style: "background-color: white;",
                        region: "east",
                        layout: {
                            type: "vbox",
                            align: "stretch",
                        },
                        items: [
                            // {
                            //    xtype: "gridpanel",
                            //    title: "Related Series",
                            //    id: "relatedProducts",
                            //    store: relatedProductStore,
                            //    columns: relatedProductColumns,
                            //    listeners: {
                            //       dblclick: {
                            //          element: "body",
                            //          fn: () => {
                            //             const selectedRecord = Ext.getCmp("relatedProducts")
                            //                .getSelectionModel()
                            //                .getSelection()[0];
                            //             console.log(selectedRecord);
                            //             // serieIDGlobal = selectedRecord.data.Sid;
                            //             // getSerieDetails(selectedRecord.data.Sid);
                            //             // Ext.getCmp("SerieDetails").setTitle(
                            //             //    `SERIE DETAILS - ${selectedRecord.data.Key}`
                            //             // );
                            //             // relatedProductStore.getProxy().setExtraParam('serieId', selectedRecord.data.Sid);
                            //             // relatedProductStore.load();
                            //             // Ext.getCmp("viewport").setActiveItem("SerieDetails");
                            //          },
                            //       },
                            //    },
                            // },
                            {
                                xtype: "panel",
                                title: "Related Products",
                                id: "relatedProducts",
                                items: [],
                            },
                            {
                                xtype: "panel",
                                title: "Related Accessories",
                                id: "relatedAccessories",
                                items: [],
                            },
                            {
                                xtype: "panel",
                                title: "Related Parts",
                                id: "relatedParts",
                                items: [],
                            },


                        ],
                    },
                    {
                        xtype: "panel",
                        title: "Serie Info",
                        region: "center",
                        scrollable: true,
                        style: "padding-left: 20px; background-color: white;",
                        id: "productInfoContainer",
                        layout: {
                            type: "vbox",
                            align: "stretch",
                        },
                        items: [
                            {
                                xtype: "displayfield",
                                id: "key",
                                fieldLabel: "<b>Serie</b>",
                                labelWidth: 150,
                                fieldCls: "fieldClass",
                            },
                            {
                                xtype: "displayfield",
                                id: "title",
                                labelWidth: 150,
                                fieldLabel: "<b>Serie Title</b>",
                                fieldCls: "fieldClass",
                            },
                            {
                                xtype: "displayfield",
                                id: "fullDescription",
                                fieldLabel: "<b>Full Description</b>",
                                labelWidth: 150,
                                fieldCls: "fieldClass",
                            },
                            {
                                xtype: "displayfield",
                                id: "specification",
                                fieldLabel: "<b>Specification</b>",
                                labelWidth: 150,
                                fieldCls: "fieldClass",
                            },
                        ],
                    },
                ],
                dockedItems: [
                    {
                        xtype: "toolbar",
                        dock: "top",
                        id: "productDetailBar",
                        items: [
                            {
                                xtype: "button",
                                id: "cancel2",
                                text: "Back",
                                iconCls: "fa fa-undo-alt",
                                handler: function () {
                                    edit = false;
                                    Ext.getCmp("relatedProducts").removeAll();
                                    Ext.getCmp("relatedAccessories").removeAll();
                                    Ext.getCmp("relatedParts").removeAll();
                                    Ext.getCmp("viewport").setActiveItem("SeriesGrid");
                                },
                            },
                            "-",
                            {
                                xtype: "button",
                                id: "editDetail",
                                text: "Edit",
                                iconCls: "fa fa-edit",
                                handler: function () {
                                    edit = true;
                                    //Ext.getCmp("addSave").setHidden(true);
                                    Ext.getCmp("editSave").setHidden(false);
                                    Ext.getCmp('panelAdd').setTitle('Edit Serie');
                                    Ext.getCmp("viewport").setActiveItem("panelAdd");
                                    getSerieDetails(sessionStorage.getItem('serieIDGlobal'));
                                    Ext.getCmp("relatedProducts").removeAll();
                                    Ext.getCmp("relatedAccessories").removeAll();
                                    Ext.getCmp("relatedParts").removeAll();
                                },
                            },
                            "-",
                            {
                                xtype: "button",
                                id: "addRelatedProducts",
                                text: "Add Related Product",
                                iconCls: "fa fa-plus",
                                handler: function () {
                                    //Ext.getCmp('fromViewSave').setHidden(false);
                                    //Ext.getCmp('fromAddSave').setHidden(true);
                                    Ext.getCmp("viewport").setActiveItem("panelAddRelated");
                                },
                            },
                        ],
                    },
                ],
            });

            //<!-- ----------------------------------------------------------------------- -->
            //<!--                           Add related product                           -->
            //<!-- ----------------------------------------------------------------------- -->

            var addSeriesRelatedProd = function () {
                Ext.getBody().mask("Saving", "x-msg-loading");
                Ext.Ajax.request({
                    url: "/api/addSeriesRelatedProduct",
                    method: "POST",
                    cors: true,
                    useDefaultXhrHeader: false,
                    params: {
                        SeriesId: SeriesId,
                        ProductId: Ext.getCmp("ProductDesc").getValue(),

                    },
                    success: function (response) {
                        // check for errors and display error message
                        var check = response.responseText;
                        if (check) {
                            var data = eval("(" + response.responseText + ")");
                            if (data.serverStatus == 2) {
                                Ext.getBody().unmask();
                                Ext.Msg.alert(
                                    "Success",
                                    "You have successfully add the related product"
                                );
                            } else {
                                // display error message
                                Ext.getBody().unmask();
                                Ext.Msg.alert(
                                    "ERROR",
                                    "Failed to add the related product. Contact your IT team."
                                );
                            }
                        }
                    },
                    failure: function (response) {
                        Ext.getBody().unmask();
                        Ext.Msg.alert(
                            "ERROR",
                            "Failed to add the related product. Contact your IT team."
                        );
                    },
                });
            };


            const ProductDet = Ext.define("ProductDet", {
                extend: "Ext.data.Model",
                fields: ["CODE", "Id"],
            });

            const ProductDetStore = Ext.create("Ext.data.Store", {
                id: "ProductDetStore",
                autoLoad: true,
                model: ProductDet,
                proxy: {
                    type: "ajax",
                    method: "POST",
                    url: "/api/getProductDet",
                    noCache: true,
                    reader: {
                        type: "json",
                    },
                    cors: true,
                    useDefaultXhrHeader: false,
                },
            });

            var itemsAddRelated = [

                {
                    xtype: "combo",
                    id: "ProductDesc",
                    name: "ProductDesc",
                    store: ProductDetStore,
                    width: 300,
                    fieldLabel: "Product",
                    displayField: "CODE",
                    valueField: "Id",
                    anchor: "50%",
                    allowBlank: false,
                    selectOnFocus: false,
                    anyMatch: true,
                    queryMode: "local",

                }
            ]

            var screenAddRelated = new Ext.FormPanel({
                frame: false,
                header: false,
                border: false,
                defaults: {
                    labelAlign: "right",
                    labelWidth: 105,
                    listeners: {
                        specialkey: function (field, e) {
                            if (e.getKey() == e.ENTER) {
                                updateRec();
                            }
                            if (e.getKey() == e.ESC) {
                                //Ext.getCmp("viewport").setActiveItem("SeriesGrid");
                            }
                        },
                    },
                },
                width: 500,
                waitMsgTarget: true,
                autoScroll: true,
                style: "padding: 3px 3px 3px 3px;",
                items: [
                    {
                        layout: "column",
                        layoutConfig: {
                            columns: 2,
                        },
                        border: false,
                        items: [
                            {
                                xtype: 'my-form',
                                id: "addForm2",
                                columnWidth: 0.9,
                                border: false,
                                items: itemsAddRelated,
                            },
                        ],
                    },
                ],
            });

            var panelAddRelated = new Ext.Panel({
                layout: "fit",
                id: "panelAddRelated",
                title: "Add related product",
                header: true,
                items: [screenAddRelated],
                tbar: [
                    {
                        text: "Save",
                        id: "addRelatedSave",
                        iconCls: "fas fa-save",
                        handler: function () {
                            addSeriesRelatedProd()
                            Ext.getCmp('addForm2').reset();
                            Ext.getCmp("viewport").setActiveItem("SerieDetails");
                        },
                    },

                    "-",
                    {
                        text: "Cancel",
                        tooltip: "Cancel",
                        id: 'cancel3',
                        iconCls: "fas fa-undo",
                        handler: function () {
                            edit = false;
                            Ext.getCmp('addForm2').reset();
                            setPanelHidden();
                            Ext.getCmp("viewport").setActiveItem("SerieDetails");
                        },
                    },
                ],
            });

            //=========================================================================================================
            //		           VIEW PORT
            // ========================================================================================================

            Ext.create("Ext.container.Viewport", {
                id: "viewport",
                layout: "card",
                activeItem: 0,
                items: [SerieDetails, panelAddRelated],
            });
        });
    </script>
</head>

<body></body>

</html>