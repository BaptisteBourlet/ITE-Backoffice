<!DOCTYPE html>
<html lang="en">

<head>
   <meta charset="UTF-8" />
   <meta http-equiv="X-UA-Compatible" content="IE=edge" />
   <meta name="viewport" content="width=device-width, initial-scale=1.0" />
   <title>SEQUENCE MANAGING - ITE BACK OFFICE</title>
   <link rel="stylesheet" type="text/css"
      href="https://cdnjs.cloudflare.com/ajax/libs/extjs/6.0.0/classic/theme-neptune/resources/theme-neptune-all.css" />
   <!-- ----------------------------- DEVELOPMENT ----------------------------- -->
   <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/extjs/6.0.0/ext-all.js"></script>

   <!-- ----------------------------- PRODUCTION ------------------------------ -->
   <!--<script type="text/javascript" src="/extjs/ext-all-debug.js"></script>-->
   <style>
      .x-grid-cell-inner {
         overflow: hidden;
         padding: 10px 6px;
         white-space: nowrap;
      }

      /* This forces the container to be the reference for next selector */
      .list-extra-container {
         position: relative;
         left: 0;
      }

      .list-extra-info {
         position: absolute;
         right: 0;
         color: #555;
         font-size: 0.90em;
      }

      #small-view {
         display: none;
      }

      @media (max-width: 481px) {

         #mainPanel {
            display: none !important;
         }

         #small-view {
            margin-top: 4rem;
            font-size: 40px;
            height: 100vh;
            width: 100vw;
            line-height: 50px;
            display: block !important;
         }
      }
   </style>
   <script src="https://kit.fontawesome.com/ade53cd309.js" crossorigin="anonymous"></script>
   <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/extjs/6.0.0/ext-all.js"></script>
   <script type="text/javascript">
      //=========================================================================================================
      //		           APPLICATION START
      // ========================================================================================================
      Ext.onReady(() => {
         Ext.define('MyApp.view.Form', {
            extend: 'Ext.form.Panel',
            xtype: 'my-form',

         });
         let edit = false;
         let parentId
         const saveSequence = () => {
            const updatedItems = mainStore.getModifiedRecords();
            let check = {};
            let sequenceArr = [];

            for (const item of updatedItems) {
               if (sequenceArr.includes(item.data.Sequence + "")) {
                  Ext.Msg.alert("INFO", "There are duplicated sequence numbers!")
                  return;
               } else {
                  check[item.data.Id] = true;
                  sequenceArr = [...sequenceArr, (item.data.Sequence + "")];
               }
            }

            updatedItems.forEach(item => {
               Ext.Ajax.request({
                  url: "/apiManageSequence/changeSequence",
                  method: "POST",
                  cors: true,
                  useDefaultXhrHeader: false,
                  params: {
                     Id: item.data.Id,
                     Sequence: item.data.Sequence,
                     Parent: Ext.getCmp('CategoryID').getValue(),
                     Type: item.data.Type,
                  },
                  success: function (response) {
                     delete check[item.data.Id];
                     Object.keys(check);
                     if (Object.keys(check).length === 0) {
                        Ext.Msg.alert('INFO', "Sequences updated successfully");
                        mainStore.getProxy().setExtraParam('CategoryID', Ext.getCmp('CategoryID').getValue());
                        mainStore.load()
                     }
                  },
                  failure: function (response) {
                     Ext.getBody().unmask();
                     Ext.Msg.alert(
                        "ERROR",
                        "Failed to change sequence. Contact your IT team."
                     );
                  },
               });
            })
         }

         const CATEGORY = Ext.define("Categories", {
            extend: "Ext.data.Model",
            fields: ["Id", "Name"],
         });

         const CategoryStore = Ext.create("Ext.data.Store", {
            id: "CategoryStore",
            autoLoad: true,
            model: CATEGORY,
            proxy: {
               type: "ajax",
               method: "POST",
               url: "/apiManageSequence/getCategories",
               noCache: true,
               reader: {
                  type: "json",
                  rootProperty: "allProducts",
                  totalProperty: "totalCount",
               },
               cors: true,
               useDefaultXhrHeader: false,
            },
         });


         const getOtherLanguageDetail = (language, categoryId) => {
            Ext.Ajax.request({
               url: "/apiManageSequence/getOtherLanguageDetail",
               method: "POST",
               cors: true,
               useDefaultXhrHeader: false,
               params: {
                  language: language,
                  categoryId: categoryId,
               },
               success: function (response) {
                  const res = JSON.parse(response.responseText);

                  if (res != '') {
                     sessionStorage.setItem(language.toUpperCase() + 'Edit', 'true')
                     Ext.getCmp(`${language.toUpperCase()}Name`).setValue(res[0].Name);

                  } else {
                     sessionStorage.setItem(language.toUpperCase() + 'Edit', 'false')

                  }

               },
               failure: function (response) {
                  console.log("failed", response);
               },
            });
         }

         const mainGridColumns = [
            {
               header: "Type",
               sortable: true,
               width: 150,
               dataIndex: "Type",
               renderer: (value) => {
                  if (value === "C") {
                     return "Category"
                  } else if (value === "P") {
                     return "Product"
                  } else {
                     return "Serie"
                  }
               }
            },
            {
               header: "Name",
               sortable: true,
               width: 350,
               dataIndex: "Description",
            },
            {
               header: "Current Sequence",
               sortable: true,
               width: 150,
               dataIndex: "OldSequence",
            },
            {
               header: "New Sequence",
               sortable: false,
               width: 150,
               dataIndex: "Sequence",
               editor: {
                  completeOnEnter: true,
                  field: {
                     xtype: "numberfield",
                     allowBlank: false,
                  },
               },
            },
         ];


         const tbarItems = [
            {
               xtype: "toolbar",
               dock: "top",
               id: "bottomToolBar",
               items: [
                  {
                     xtype: "button",
                     id: "sequenceSave",
                     text: "Save",
                     iconCls: "fas fa-save",
                     scale: "small",
                     handler: function () {
                        if (mainStore.getModifiedRecords().length === 0) {
                           Ext.Msg.alert("INFO", "You havent made any changes");
                        } else {
                           saveSequence()
                        }
                     },
                  },

               ],
            },
            {
               xtype: "toolbar",
               dock: "top",
               id: "searchBar",
               items: [
               {
                     xtype: "button",
                     id: "deleteCategoryCombo",
                     iconCls: "fa fa-trash",
                     text: "",
                     style: "padding: 7px; border: none; background-color: #000",
                     handler: function () { deleteCategory('category') },


                  },
                  {
                     xtype: "button",
                     id: "EditCombo",
                     iconCls: "fa fa-edit",
                     text: "",
                     listeners: {
                        click: function () {
                           console.log(Ext.getCmp('CategoryID').getRawValue())
                           if (Ext.getCmp('CategoryID').getRawValue() == null || Ext.getCmp('CategoryID').getRawValue() == '') {
                              Ext.Msg.alert("INFO", "No category selected");
                           } else {
                              Ext.getCmp('editSave').setHidden(false)

                              Ext.getCmp('Title').setValue(Ext.getCmp('CategoryID').getRawValue())

                              Ext.getCmp("addSave").setHidden(true);
                              Ext.getCmp("editSave").setHidden(false);
                              Ext.getCmp('tabTrans').setActiveTab(0)
                              getOtherLanguageDetail('en', parentId)
                              getOtherLanguageDetail('fr', parentId)
                              getOtherLanguageDetail('de', parentId)
                              getOtherLanguageDetail('sp', parentId)
                              getOtherLanguageDetail('ru', parentId)

                              Ext.getCmp("viewport").setActiveItem("panelAdd");
                           }
                        }
                     }

                  },
                  {
                     xtype: "combo",
                     id: "CategoryID",
                     iconCls: "fa fa-search",
                     store: CategoryStore,
                     displayField: 'Name',
                     valueField: 'Id',
                     width: 400,
                     labelWidth: 20,
                     anyMatch: true,
                     queryMode: "local",
                     style: "margin-left: 5px; color: grey;",
                     emptyText: "Select specific category...",
                     listeners: {
                        change: function () {
                           parentId = Ext.getCmp('CategoryID').getValue()
                           mainStore.getProxy().setExtraParam('CategoryID', Ext.getCmp('CategoryID').getValue());
                           mainStore.load()
                        },
                     },
                     listConfig: {
                        itemTpl: ['<div class="list-extra-container">{Name} <tpl if="Tree"><span class="list-extra-info">{Tree}<span></tpl></div>']
                     }
                  },
                  {
                     xtype: "button",
                     id: "resetSearch",
                     iconCls: "fas fa-undo-alt",
                     text: "Reset Edit",
                     style: "padding: 7px; border: none; background-color: #000",
                     listeners: {
                        click: () => {
                           mainStore.getProxy().setExtraParam('CategoryID', Ext.getCmp('CategoryID').getValue());
                           mainStore.load()
                        },
                     },
                  },
                  {
                     xtype: "button",
                     id: "AddCategory",
                     iconCls: "fa fa-plus",
                     text: "Add Category",
                     style: "padding: 7px; border: none; background-color: #000",
                     listeners: {
                        click: () => {
                           Ext.getCmp('editSave').setHidden(true)
                           Ext.getCmp('addSave').setHidden(false)
                           Ext.getCmp("viewport").setActiveItem("panelAdd");
                        },
                     },
                  },
                  '-',
                  {
                     xtype: "button",
                     id: "EditCategory",
                     iconCls: "fa fa-edit",
                     text: "Edit Category",
                     style: "padding: 7px; border: none; background-color: #000",
                     listeners: {
                        click: () => {
                           Ext.getCmp('editSave').setHidden(false)
                           const selectedRecord = Ext.getCmp("mainGrid")
                              .getSelectionModel()
                              .getSelection()[0];

                           if (selectedRecord === undefined) {
                              Ext.Msg.alert("INFO", "No record selected");
                           } else {
                              Ext.getCmp('Title').setValue(selectedRecord.data.Description)
                              categoryIDGlobal = selectedRecord.data.Id;
                              Ext.getCmp("addSave").setHidden(true);
                              Ext.getCmp("editSave").setHidden(false);
                              Ext.getCmp('tabTrans').setActiveTab(0)
                              getOtherLanguageDetail('en', categoryIDGlobal)
                              getOtherLanguageDetail('fr', categoryIDGlobal)
                              getOtherLanguageDetail('de', categoryIDGlobal)
                              getOtherLanguageDetail('sp', categoryIDGlobal)
                              getOtherLanguageDetail('ru', categoryIDGlobal)

                              Ext.getCmp("viewport").setActiveItem("panelAdd");
                           }
                        },
                     },
                  },
                  '-',
                  {
                     xtype: "button",
                     id: "deleteCategory",
                     iconCls: "fa fa-trash",
                     text: "Delete category",
                     style: "padding: 7px; border: none; background-color: #000",
                     handler: function () { deleteCategory('IT') },


                  },
               ],
            },
         ];

         const Model = Ext.define("Categories", {
            extend: "Ext.data.Model",
            fields: ["Description", "Sequence", "OldSequence", "Type"],
         });
         const mainStore = Ext.create("Ext.data.Store", {
            id: "mainStore",
            autoLoad: false,
            model: Model,

            proxy: {
               type: "ajax",
               method: "POST",
               url: "/apiManageSequence/getSequenceResults",
               noCache: true,
               reader: {
                  type: "json",
               },
               cors: true,
               useDefaultXhrHeader: false,
            },
            listeners: {
               beforeload: function (store) { },
            },
         });

         const mainGrid = Ext.create("Ext.grid.GridPanel", {
            id: "mainGrid",
            flex: 1,
            scrollable: true,
            title: "Managing Products, Series and Categories Sequence",
            trackOver: true,
            loadMask: true,
            store: mainStore,
            columns: mainGridColumns,
            enableColumnMove: false,
            selModel: 'cellmodel',
            plugins: {
               ptype: 'cellediting',
               clicksToEdit: 1
            },
            sortable: true,
            frame: false,
            renderTo: Ext.getBody(),
            height: 690,
            dockedItems: [...tbarItems],
         });


         //<!-- ---------------------------- CRUD CATEGORY ---------------------------- -->



         var editCategory = function () {
            Ext.getBody().mask("Saving", "x-msg-loading");
            Ext.Ajax.request({
               url: "/apiManageSequence/updateCategory",
               method: "POST",
               cors: true,
               useDefaultXhrHeader: false,
               params: {
                  id: chapterId,
                  Chapter: Ext.getCmp("Chapter").getValue(),
                  Language: Ext.getCmp("Language").getValue().toLowerCase(),
                  Translated: getCheckboxValue(),

               },
               success: function (response) {
                  // check for errors and display error message
                  var check = response.responseText;
                  if (check) {
                     var data = JSON.parse(check);
                     if (data) {
                        Ext.getBody().unmask();
                        Ext.Msg.alert(
                           "Category",
                           `You have successfully add the category`,
                        );
                        Ext.getCmp("viewport").setActiveItem('mainGrid');
                        mainStore.reload();
                     } else {
                        // display error message
                        Ext.getBody().unmask();
                        Ext.Msg.alert(
                           "ERROR",
                           "Failed to add the category. Contact your IT team."
                        );
                     }
                  }
               },
               failure: function (response) {
                  Ext.getBody().unmask();
                  Ext.Msg.alert(
                     "ERROR",
                     "Failed to add the category. Contact your IT team."
                  );
               }
            });
         };


         var deleteCategory = function (type) {
            if (type == 'IT'){

               const selectedRecord = Ext.getCmp("mainGrid")
               .getSelectionModel()
               .getSelection()[0];
               console.log(selectedRecord.data)
               Ext.Msg.confirm('Confirm delete', "Are you sure you want to remove this category ?", function (btn, text) {
                  if (btn == 'yes') {
                     Ext.getBody().mask('Deleting', 'x-msg-loading');
                     Ext.Ajax.request({
                        url: "/apiManageSequence/deleteCategory",
                        method: "POST",
                        cors: true,
                        useDefaultXhrHeader: false,
                        params: {
                           type: type,
                           id: selectedRecord.data.Id,
                        },
                        success: function (response) {
                           // check for errors and display error message
                           var check = response.responseText;
                           if (check) {
                              var data = eval("(" + response.responseText + ")");

                              if (data.serverStatus == 2) {
                                 mainStore.reload();
                                 Ext.getBody().unmask();
                                 Ext.Msg.alert(
                                    "Success",
                                    "You have successfully deleted the category"
                                 );
                              } else {
                                 // display error message
                                 Ext.getBody().unmask();
                                 Ext.Msg.alert(
                                    "ERROR",
                                    "Failed to delete the category. Contact your IT team."
                                 );
                              }
                           }
                        },
                        failure: function (response) {
                           Ext.getBody().unmask();
                           Ext.Msg.alert(
                              "ERROR",
                              "Failed to delete category. Contact your IT team."
                           );
                        },

                     });
                  }
               })
            } else if( type == 'category'){
               
           
               Ext.Msg.confirm('Confirm delete', "Are you sure you want to remove this category ?", function (btn, text) {
                  if (btn == 'yes') {
                     Ext.getBody().mask('Deleting', 'x-msg-loading');
                     Ext.Ajax.request({
                        url: "/apiManageSequence/deleteCategory",
                        method: "POST",
                        cors: true,
                        useDefaultXhrHeader: false,
                        params: {
                           type: type,
                           id: Ext.getCmp('CategoryID').getValue()
                        },
                        success: function (response) {
                           // check for errors and display error message
                           var check = response.responseText;
                           if (check) {
                              var data = eval("(" + response.responseText + ")");

                              if (data.serverStatus == 2) {
                                 mainStore.reload();
                                 Ext.getBody().unmask();
                                 Ext.Msg.alert(
                                    "Success",
                                    "You have successfully deleted the category"
                                 );
                              } else {
                                 // display error message
                                 Ext.getBody().unmask();
                                 Ext.Msg.alert(
                                    "ERROR",
                                    "Failed to delete the category. Contact your IT team."
                                 );
                              }
                           }
                        },
                        failure: function (response) {
                           Ext.getBody().unmask();
                           Ext.Msg.alert(
                              "ERROR",
                              "Failed to delete category. Contact your IT team."
                           );
                        },

                     });
                  }
               })
            }
            

         }

         var TabTranslations = Ext.create('Ext.TabPanel', {
            fullscreen: true,
            tabBarPosition: 'bottom',
            id: 'tabTrans',
            defaults: {
               styleHtmlContent: true
            },

            items: [
               {
                  title: 'English',
                  items: [
                     {
                        xtype: "fieldset",
                        title: "English Translations",
                        anchor: "100%",
                        hidden: false,
                        id: "ENFIELD",
                        layoutConfig: {
                           // The total column count must be specified here
                           columns: 9,
                        },
                        items: [
                           {
                              layout: {
                                 type: 'hbox',
                                 align: 'stretch'
                              },
                              border: false,
                              items: [
                                 {
                                    xtype: 'my-form',
                                    width: '40%',
                                    frame: false,
                                    id: 'formEN',
                                    border: false,
                                    items: [
                                       {
                                          xtype: "textfield",
                                          id: "ENName",
                                          name: "ENName",
                                          fieldLabel: "Name",
                                          maxLenght: 118,
                                          width: 500,
                                          allowBlank: false,
                                          submitvalue: true,
                                          margin: "25 0 25 0",
                                       },
                                    ]
                                 },

                              ]
                           },
                        ],
                     },
                  ]
               },

               {
                  title: 'French',

                  items: [
                     {
                        xtype: "fieldset",
                        title: "French Translations",
                        anchor: "100%",
                        hidden: false,
                        id: "FRFIELD",
                        layoutConfig: {
                           // The total column count must be specified here
                           columns: 9,
                        },
                        items: [
                           {
                              layout: {
                                 type: 'hbox',
                                 align: 'stretch'
                              },
                              border: false,
                              items: [
                                 {
                                    xtype: 'my-form',
                                    width: '40%',
                                    frame: false,
                                    id: 'formFR',
                                    border: false,
                                    items: [

                                       {
                                          xtype: "textfield",
                                          id: "FRName",
                                          name: "FRName",
                                          fieldLabel: "Name",
                                          maxLenght: 118,
                                          width: 500,
                                          allowBlank: true,
                                          submitvalue: true,
                                          margin: "25 0 25 0",
                                       },

                                    ]
                                 },
                              ]
                           },
                        ],
                     },
                  ]
               },
               {
                  title: 'German',

                  items: [
                     {
                        xtype: "fieldset",
                        title: "German Translations",
                        anchor: "100%",
                        hidden: false,
                        id: "DEFIELD",
                        layoutConfig: {
                           // The total column count must be specified here
                           columns: 9,
                        },
                        items: [
                           {
                              layout: {
                                 type: 'hbox',
                                 align: 'stretch'
                              },
                              border: false,
                              items: [
                                 {
                                    xtype: 'my-form',
                                    width: '40%',
                                    frame: false,
                                    border: false,
                                    id: 'formDE',
                                    items: [

                                       {
                                          xtype: "textfield",
                                          id: "DEName",
                                          name: "DEName",
                                          fieldLabel: "Name",
                                          maxLenght: 118,
                                          width: 500,
                                          allowBlank: true,
                                          submitvalue: true,
                                          margin: "25 0 25 0",
                                       },

                                    ]
                                 },

                              ]
                           },
                        ],
                     },
                  ]
               },
               {
                  title: 'Spanish',

                  items: [
                     {
                        xtype: "fieldset",
                        labelStyle: "font-weight: bold; ",
                        title: "Spanish Translations",
                        anchor: "100%",
                        hidden: false,
                        id: "SPFIELD",
                        layoutConfig: {
                           // The total column count must be specified here
                           columns: 9,
                        },
                        items: [
                           {
                              layout: {
                                 type: 'hbox',
                                 align: 'stretch'
                              },
                              border: false,
                              items: [
                                 {
                                    xtype: 'my-form',
                                    width: '40%',
                                    frame: false,
                                    id: 'formSP',
                                    border: false,
                                    items: [

                                       {
                                          xtype: "textfield",
                                          id: "SPName",
                                          name: "SPName",
                                          fieldLabel: "Name",
                                          allowBlank: true,
                                          maxLenght: 118,
                                          width: 500,
                                          submitvalue: true,
                                          margin: "25 0 25 0",
                                       },


                                    ]
                                 },

                              ]
                           },
                        ],
                     },
                  ]
               },
               {
                  title: 'Russian',

                  items: [
                     {
                        xtype: "fieldset",
                        title: "Russian Translations",
                        anchor: "100%",
                        hidden: false,
                        id: "RUFIELD",
                        layoutConfig: {
                           // The total column count must be specified here
                           columns: 9,
                        },
                        items: [
                           {
                              layout: {
                                 type: 'hbox',
                                 align: 'stretch'
                              },
                              border: false,
                              items: [
                                 {
                                    xtype: 'my-form',
                                    width: '40%',
                                    frame: false,
                                    id: 'formRU',
                                    border: false,
                                    items: [

                                       {
                                          xtype: "textfield",
                                          id: "RUName",
                                          name: "RUName",
                                          fieldLabel: "Name",
                                          maxLenght: 118,
                                          allowBlank: true,
                                          width: 500,
                                          submitvalue: true,
                                          margin: "25 0 25 0",
                                       },


                                    ]
                                 },

                              ]
                           },
                        ],
                     },
                  ]
               },
            ]
         });


         var itemsAdd = [
            {
               xtype: "textfield",
               id: "Title",
               name: "Title",
               fieldLabel: "Title",
               maxLenght: 255,
               width: 500,
               allowBlank: true,
               selectOnFocus: false,
            },

            // {
            //   xtype: "button",
            //   id: 'compare',
            //   text: "Compare Translations",
            //   iconCls: "fa fa-list",
            //   handler: function () {

            //   },
            //   style: {

            //     margin: '5px 5px 5px 40%'
            //   }
            // },
            TabTranslations,
         ];

         var screenAdd = new Ext.FormPanel({
            id: 'screenAdd',
            frame: false,
            header: false,
            border: false,
            defaults: {
               labelAlign: "right",
               labelWidth: 105,
               listeners: {
                  specialkey: function (field, e) {
                     if (e.getKey() == e.ENTER) {
                        updateRec();
                     }
                     if (e.getKey() == e.ESC) {
                        Ext.getCmp("viewport").setActiveItem("mainGrid");
                     }
                  },
               },
            },
            width: 1200,
            waitMsgTarget: true,
            autoScroll: true,
            style: "padding: 3px 3px 3px 3px;",
            items: [
               {
                  layout: "column",
                  layoutConfig: {
                     columns: 2,
                  },
                  border: false,
                  items: [
                     {
                        xtype: 'my-form',
                        id: "addForm",
                        columnWidth: 1,
                        border: false,
                        items: itemsAdd,
                     },
                  ],
               },
            ],
         });


         var addCategory = function () {
            Ext.getBody().mask("Saving", "x-msg-loading");

            Ext.Ajax.request({
               url: "/apiManageSequence/addCategory",
               method: "POST",
               cors: true,
               useDefaultXhrHeader: false,
               params: {
                  ParentId: parentId,
                  Title: Ext.getCmp('Title').getValue(),
                  Slug: Ext.getCmp('ENName').getValue().toLowerCase().replaceAll(" ", "-"),
                  Language: "en",
                  Name: Ext.getCmp("ENName").getValue().trim(),
                  //FR
                  FRLanguage: "fr",
                  FRName: Ext.getCmp("FRName").getValue().trim(),
                  FRSlug: Ext.getCmp('FRName').getValue().toLowerCase().replaceAll(" ", "-"),

                  //DE
                  DELanguage: "de",
                  DEName: Ext.getCmp("DEName").getValue().trim(),
                  DESlug: Ext.getCmp('DEName').getValue().toLowerCase().replaceAll(" ", "-"),
                  //SP
                  SPLanguage: "sp",
                  SPName: Ext.getCmp("SPName").getValue().trim(),
                  SPSlug: Ext.getCmp('SPName').getValue().toLowerCase().replaceAll(" ", "-"),
                  //RU
                  RULanguage: "ru",
                  RUName: Ext.getCmp("RUName").getValue().trim(),
                  RUSlug: Ext.getCmp('RUName').getValue().toLowerCase().replaceAll(" ", "-"),
               },
               success: function (response) {
                  // check for errors and display error message
                  var check = response.responseText;
                  if (check) {
                     var data = JSON.parse(check);
                     if (data) {
                        Ext.getBody().unmask();

                        Ext.getCmp("viewport").setActiveItem('mainGrid');
                     }


                  } else {
                     // display error message
                     Ext.getBody().unmask();
                     Ext.Msg.alert(
                        "ERROR",
                        "Failed to add the category. Contact your IT team."
                     );
                  }

               },
               failure: function (response) {
                  Ext.getBody().unmask();
                  Ext.Msg.alert(
                     "ERROR",
                     "Failed to add the category. Contact your IT team."
                  );
               },
            });
         };


         // outer panel container to hold tbar and keypress definitions
         var panelAdd = new Ext.Panel({
            layout: "fit",
            id: "panelAdd",
            title: "Add category",
            header: true,
            items: [screenAdd],
            tbar: [
               {
                  text: "Save",
                  id: "addSave",
                  iconCls: "fas fa-save",
                  handler: function () {
                     if (Ext.getCmp('addForm').isValid()) {
                        Ext.getCmp('addSave').setHidden(false);
                        Ext.getCmp('editSave').setHidden(true);
                        addCategory();
                        Ext.getCmp("addForm").reset();
                     }
                  },
               },
               {
                  text: "Save",
                  id: "editSave",
                  iconCls: "fas fa-save",
                  handler: function () {
                     if (Ext.getCmp('addForm').isValid()) {
                        editCatefory()
                        Ext.getCmp("addForm").reset();
                     }
                  },
               },
               "-",
               {
                  text: "Cancel",
                  tooltip: "Cancel",
                  id: 'cancel',
                  iconCls: "fas fa-undo",
                  handler: function () {
                     edit = false;
                     Ext.getCmp("addForm").reset();
                     Ext.getCmp("viewport").setActiveItem("mainGrid");
                  },
               },
            ],
         });


         //=========================================================================================================
         //		           VIEW PORT
         // ========================================================================================================

         Ext.create("Ext.container.Viewport", {
            id: "viewport",
            layout: "card",
            activeItem: 0,
            items: [mainGrid, panelAdd],
         });
      });
   </script>
</head>

<body>
   <div id="small-view">
      This Appplication is not meant for small devices.
   </div>
</body>

</html>