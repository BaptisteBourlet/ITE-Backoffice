<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>ITE BACK OFFICE MANAGEMENT</title>
    <link rel="stylesheet" type="text/css"
        href="https://cdnjs.cloudflare.com/ajax/libs/extjs/6.0.0/classic/theme-neptune/resources/theme-neptune-all.css" />
    <script src="https://kit.fontawesome.com/ade53cd309.js" crossorigin="anonymous"></script>
    <!-- ----------------------------- DEVELOPMENT ----------------------------- -->
    <!-- <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/extjs/6.0.0/ext-all.js"></script> -->

    <!-- ----------------------------- PRODUCTION ------------------------------ -->
    <script type="text/javascript" src="/extjs/ext-all-debug.js"></script>
    <style>
        .x-grid-view {
            overflow-y: auto !important;
            position: relative;
        }

        #small-view {
            display: none;
        }

        @media (max-width: 481px) {
            #SpotlightGrid {
                display: none !important;
            }

            #small-view {
                margin-top: 4rem;
                font-size: 40px;
                height: 100vh;
                width: 100vw;
                line-height: 50px;
                display: block !important;
            }
        }
    </style>
    <script type="text/javascript">
        //=========================================================================================================
        //		           APPLICATION START
        // ========================================================================================================
        Ext.onReady(() => {

            let edit = false;
            let spotlightId

            Ext.define('MyApp.view.Form', {
                extend: 'Ext.form.Panel',
                xtype: 'my-form',

            });

            const getOtherLanguageDetail = (language, spotlightId) => {
                Ext.Ajax.request({
                    url: "/apiSpotlight/getOtherLanguageDetail",
                    method: "POST",
                    cors: true,
                    useDefaultXhrHeader: false,
                    params: {
                        language: language,
                        spotlightId: spotlightId,
                    },
                    success: function (response) {
                        const res = JSON.parse(response.responseText);

                        if (res != '') {
                            sessionStorage.setItem(language.toUpperCase() + 'Edit', 'true')
                            Ext.getCmp(`${language.toUpperCase()}Name`).setValue(res[0].Title);

                        } else {
                            sessionStorage.setItem(language.toUpperCase() + 'Edit', 'false')

                        }

                    },
                    failure: function (response) {
                        console.log("failed", response);
                    },
                });
            }

            var renderImage = function (val) {
                return '<img src="/spotlightPictures/' + val + '" width="100" height="100">'
            }

            const mainGridColumns = [
                {
                    header: "ID",
                    sortable: true,
                    width: 80,
                    dataIndex: "Id",
                },
                {
                    header: "Working Title",
                    sortable: true,
                    width: 250,
                    dataIndex: "WorkingTitle",
                },
                {
                    header: "Title",
                    sortable: true,
                    width: 250,
                    dataIndex: "Title",
                },
                {
                    header: "Date",
                    sortable: true,
                    width: 200,
                    dataIndex: "Date",
                    renderer: Ext.util.Format.dateRenderer('Y-m-d')
                },
                {
                    header: "Visual",
                    sortable: true,
                    width: 130,
                    dataIndex: "Visual",
                    renderer: renderImage
                },

            ];



            const tbarItems = [

                {
                    xtype: "toolbar",
                    dock: "top",
                    id: "bottomToolBar",
                    items: [
                        {
                            xtype: "button",
                            id: "add",
                            iconCls: "fa fa-plus-circle",
                            text: "New",
                            scale: "small",
                            handler: function () {

                                Ext.getCmp("addSave").setHidden(false);
                                Ext.getCmp("editSave").setHidden(true);
                                Ext.getCmp("panelAdd").setTitle("Add spotlight");
                                Ext.getCmp("viewport").setActiveItem("panelAdd");
                            },
                        },
                        "-",
                        {
                            xtype: "button",
                            id: "edit",
                            text: "Edit",
                            iconCls: "fa fa-edit",
                            scale: "small",
                            handler: function () {
                                edit = true;

                                const selectedRecord = Ext.getCmp("SpotlightGrid")
                                    .getSelectionModel()
                                    .getSelection()[0];

                                if (selectedRecord === undefined) {
                                    Ext.Msg.alert("INFO", "No record selected");
                                } else {
                                    spotlightIdGlobal = selectedRecord.data.Id;
                                    Ext.getCmp("WorkingTitle").setValue(selectedRecord.data.WorkingTitle)
                                    Ext.getCmp("Visual").setValue(selectedRecord.data.Visual)

                                    const unformatDate = new Date(selectedRecord.data.Date)
                                   
                                    var formatDate = unformatDate.getDate() + "-" + (unformatDate.getMonth() + 1) + "-" + unformatDate.getFullYear()
                                    
                                    Ext.getCmp("Dates").setValue(unformatDate)
                                    Ext.getCmp("addSave").setHidden(true);
                                    Ext.getCmp("editSave").setHidden(false);
                                    Ext.getCmp('tabTrans').setActiveTab(0)
                                    getOtherLanguageDetail('en', spotlightIdGlobal)
                                    getOtherLanguageDetail('fr', spotlightIdGlobal)
                                    getOtherLanguageDetail('de', spotlightIdGlobal)
                                    getOtherLanguageDetail('sp', spotlightIdGlobal)
                                    getOtherLanguageDetail('ru', spotlightIdGlobal)

                                    Ext.getCmp("panelAdd").setTitle("Edit spotlight");

                                    Ext.getCmp("viewport").setActiveItem("panelAdd");
                                }
                            },
                        },
                        "-",
                        {
                            xtype: "button",
                            id: "delete",
                            text: "Delete",
                            iconCls: "fa fa-trash-alt",
                            scale: "small",
                            handler: function () {
                                deleteSpotlight()
                            },
                        },

                    ],
                },

            ];

            const SpotlightModel = Ext.define("SpotlightModel", {
                extend: "Ext.data.Model",
                fields: ["id", "WorkingTitle", "Visual", "Date"],
            });

            const SpotlightStore = Ext.create("Ext.data.Store", {
                id: "SpotlightStore",
                autoLoad: true,
                model: SpotlightModel,
                proxy: {
                    type: "ajax",
                    method: "POST",
                    url: "/apiSpotlight/getSpotlight",
                    noCache: true,
                    reader: {
                        type: "json",
                    },

                    cors: true,
                    useDefaultXhrHeader: false,
                },
            });

            const SpotlightGrid = Ext.create("Ext.grid.GridPanel", {
                id: "SpotlightGrid",
                bufferedRenderer: false,
                flex: 1,
                scrollable: true,
                title: "Spotlights",
                trackOver: true,
                loadMask: true,
                store: SpotlightStore, // store
                columns: mainGridColumns, //columns
                enableColumnMove: false,
                sortable: true,
                frame: false,
                renderTo: Ext.getBody(),
                height: 690,
                dockedItems: [...tbarItems],
                listeners: {
                    dblclick: {
                        element: "body",
                        fn: () => {

                        },
                    },
                },
            });

            let current_datetime = new Date();
            var time = function () {
                if (current_datetime.getMonth() + 1 < 10) {
                    return "0" + Number(current_datetime.getMonth() + 1);
                } else {
                    return current_datetime.getMonth() + 1;
                }
            };

            let formatted_date =
                current_datetime.getFullYear() +
                "-" +
                time() +
                "-" +
                current_datetime.getDate() +
                " " +
                current_datetime.getHours() +
                ":" +
                current_datetime.getMinutes() +
                ":" +
                current_datetime.getSeconds();

            let formatDate =
                current_datetime.getFullYear() +
                "-" +
                time() +
                "-" +
                current_datetime.getDate();


            var addSpotlight = async function () {
                var form = Ext.getCmp('addForm')
                Ext.getBody().mask("Saving", "x-msg-loading");

                WorlkingTitle = Ext.getCmp("WorkingTitle").getValue()
                const VisualArray = (Ext.getCmp("Visual").getValue()).split('\\')
                var VisualName = VisualArray.pop();
                var Date = Ext.getCmp("Dates").getValue();
                var Title = Ext.getCmp("ENName").getValue();
                var Pdf = (Ext.getCmp("ENpdf").getValue()).split('\\');
                var PdfName = Pdf.pop();
                // FR
                var FRTitle = Ext.getCmp("FRName").getValue();
                var FRPdfArray = (Ext.getCmp("FRpdf").getValue()).split('\\');
                var FRPdfName = FRPdfArray.pop();
                // DE
                var DETitle = Ext.getCmp("DEName").getValue();
                var DEPdfArray = (Ext.getCmp("DEpdf").getValue()).split('\\');
                var DEPdfName = DEPdfArray.pop();
                // SP
                var SPTitle = Ext.getCmp("SPName").getValue();
                var SPPdfArray = (Ext.getCmp("SPpdf").getValue()).split('\\');
                var SPPdfName = SPPdfArray.pop();
                // RU
                var RUTitle = Ext.getCmp("RUName").getValue();
                var RUPdfArray = (Ext.getCmp("RUpdf").getValue()).split('\\');
                var RUPdfName = RUPdfArray.pop();

                // All Files
                const ENfile = Ext.getCmp("ENpdf").fileInputEl.dom.files[0];
                
                if(Ext.getCmp("FRpdf").getValue() != ''){
                    
                    var FRfile = Ext.getCmp("FRpdf").fileInputEl.dom.files[0];
                } else {
                    var FRfile = ''
                }
                
                if(Ext.getCmp("DEpdf").getValue() != ''){
                    var DEfile = Ext.getCmp("DEpdf").fileInputEl.dom.files[0];
                }else {
                    var DEfile = ''
                }

                if(Ext.getCmp("SPpdf").getValue() != ''){
                    console.log( 'ok ' )
                    var SPfile = Ext.getCmp("SPpdf").fileInputEl.dom.files[0];
                }else {
                    var SPfile = ''
                }

                if(Ext.getCmp("RUpdf").getValue() != ''){
                    var RUfile = Ext.getCmp("RUpdf").fileInputEl.dom.files[0];
                }else {
                    var RUfile = ''
                }

                const toBase64 = file => new Promise((resolve, reject) => {
                    const reader = new FileReader();

                    reader.readAsDataURL(file);
                    reader.onload = () => resolve(reader.result.replace("data:", "").replace(/^.+,/, ""));
                    reader.onerror = error => reject(error);
                });

                // VISUAL BASE 64
                const file = Ext.getCmp("Visual").fileInputEl.dom.files[0];
                let VisualFile = await toBase64(file)

                // EN PDF BASE 64
                // const ENfile = Ext.getCmp("ENpdf").fileInputEl.dom.files[0];
                
                let ENPdfFile = await toBase64(ENfile)

                // FR PDF BASE 64
                // const FRfile = Ext.getCmp("FRpdf").fileInputEl.dom.files[0];
                if(FRfile != ''){
                    var FRPdfFile = await toBase64(FRfile)
                }
                
                if(DEfile != ''){
                    var DEPdfFile = await toBase64(DEfile)
                }

                if(SPfile != ''){
                    var SPPdfFile = await toBase64(SPfile)
                }


                if(RUfile != ''){
                    var RUPdfFile = await toBase64(RUfile)
                }
                

                Ext.Ajax.request({
                    url: "/apiSpotlight/addSpotlight",
                    method: "POST",
                    cors: true,
                    useDefaultXhrHeader: false,
                    params: {
                        ENPdfFile: ENPdfFile,
                        FRPdfFile: FRPdfFile,
                        DEPdfFile: DEPdfFile,
                        SPPdfFile: SPPdfFile,
                        RUPdfFile: RUPdfFile,
                        VisualFile: VisualFile,

                        CreatedOn: formatDate,
                        WorkingTitle: WorlkingTitle,
                        Date: Date,
                        VisualName: VisualName,
                        Title: Title,
                        PdfName: PdfName,
                        Language: 'en',
                        // FR
                        FRLanguage: 'fr',
                        FRTitle: FRTitle,
                        FRPdfName: FRPdfName,

                        // DE
                        DELanguge: 'de',
                        DETitle: DETitle,
                        DEPdfName: DEPdfName,

                        // SP
                        SPLanguage: 'es',
                        SPTitle: SPTitle,
                        SPPdfName: SPPdfName,

                        // RU
                        RULanguage: 'ru',
                        RUTitle: RUTitle,
                        RUPdfName: RUPdfName,

                    },
                    success: function (fp, object) {
                        Ext.getBody().unmask();
                        SpotlightStore.reload();
                            Ext.getCmp("viewport").setActiveItem('SpotlightGrid');
                    },
                    failure: function (obj, res) {
                        Ext.getBody().unmask();
                        if (res) {
                            Ext.Msg.alert(
                                "INFO",
                                "Spotlight added successfully."
                            );
                            form.reset();
                            SpotlightStore.reload();
                            Ext.getCmp("viewport").setActiveItem('SpotlightGrid');
                        } else {
                            Ext.Msg.alert(
                                "ERROR",
                                "Failed to add new spotlight. Contact your IT team."
                            );
                        }
                    },
                });

            };

            var editSpotlight = function () {
                var form = Ext.getCmp('addForm')
                Ext.getBody().mask("Saving", "x-msg-loading");

                WorlkingTitle = Ext.getCmp("WorkingTitle").getValue()
                const VisualArray = (Ext.getCmp("Visual").getValue()).split('\\')
                var VisualName = VisualArray.pop();
                var Date = Ext.getCmp("Dates").getValue();
                var Title = Ext.getCmp("ENName").getValue();
                var Pdf = (Ext.getCmp("ENpdf").getValue()).split('\\');
                var PdfName = Pdf.pop();
                // FR
                var FRTitle = Ext.getCmp("FRName").getValue();
                var FRPdfArray = (Ext.getCmp("FRpdf").getValue()).split('\\');
                var FRPdfName = FRPdfArray.pop();
                // DE
                var DETitle = Ext.getCmp("DEName").getValue();
                var DEPdfArray = (Ext.getCmp("DEpdf").getValue()).split('\\');
                var DEPdfName = DEPdfArray.pop();
                // SP
                var SPTitle = Ext.getCmp("SPName").getValue();
                var SPPdfArray = (Ext.getCmp("SPpdf").getValue()).split('\\');
                var SPPdfName = SPPdfArray.pop();
                // RU
                var RUTitle = Ext.getCmp("RUName").getValue();
                var RUPdfArray = (Ext.getCmp("RUpdf").getValue()).split('\\');
                var RUPdfName = RUPdfArray.pop();

                // All Files
                const ENfile = Ext.getCmp("ENpdf").fileInputEl.dom.files[0];
                
                if(Ext.getCmp("FRpdf").getValue() != ''){
                    
                    var FRfile = Ext.getCmp("FRpdf").fileInputEl.dom.files[0];
                } else {
                    var FRfile = ''
                }
                
                if(Ext.getCmp("DEpdf").getValue() != ''){
                    var DEfile = Ext.getCmp("DEpdf").fileInputEl.dom.files[0];
                }else {
                    var DEfile = ''
                }

                if(Ext.getCmp("SPpdf").getValue() != ''){
                    console.log( 'ok ' )
                    var SPfile = Ext.getCmp("SPpdf").fileInputEl.dom.files[0];
                }else {
                    var SPfile = ''
                }

                if(Ext.getCmp("RUpdf").getValue() != ''){
                    var RUfile = Ext.getCmp("RUpdf").fileInputEl.dom.files[0];
                }else {
                    var RUfile = ''
                }

                const toBase64 = file => new Promise((resolve, reject) => {
                    const reader = new FileReader();

                    reader.readAsDataURL(file);
                    reader.onload = () => resolve(reader.result.replace("data:", "").replace(/^.+,/, ""));
                    reader.onerror = error => reject(error);
                });

                // VISUAL BASE 64
                const file = Ext.getCmp("Visual").fileInputEl.dom.files[0];
                let VisualFile = await toBase64(file)

                // EN PDF BASE 64
                // const ENfile = Ext.getCmp("ENpdf").fileInputEl.dom.files[0];
                
                let ENPdfFile = await toBase64(ENfile)

                // FR PDF BASE 64
                // const FRfile = Ext.getCmp("FRpdf").fileInputEl.dom.files[0];
                if(FRfile != ''){
                    var FRPdfFile = await toBase64(FRfile)
                }
                
                if(DEfile != ''){
                    var DEPdfFile = await toBase64(DEfile)
                }

                if(SPfile != ''){
                    var SPPdfFile = await toBase64(SPfile)
                }


                if(RUfile != ''){
                    var RUPdfFile = await toBase64(RUfile)
                }
                

                Ext.Ajax.request({
                    url: "/apiSpotlight/updateSpotlight",
                    method: "POST",
                    cors: true,
                    useDefaultXhrHeader: false,
                    params: {
                        ENPdfFile: ENPdfFile,
                        FRPdfFile: FRPdfFile,
                        DEPdfFile: DEPdfFile,
                        SPPdfFile: SPPdfFile,
                        RUPdfFile: RUPdfFile,
                        VisualFile: VisualFile,

                        CreatedOn: formatDate,
                        WorkingTitle: WorlkingTitle,
                        Date: Date,
                        VisualName: VisualName,
                        Title: Title,
                        PdfName: PdfName,
                        Language: 'en',
                        // FR
                        FRLanguage: 'fr',
                        FRTitle: FRTitle,
                        FRPdfName: FRPdfName,

                        // DE
                        DELanguge: 'de',
                        DETitle: DETitle,
                        DEPdfName: DEPdfName,

                        // SP
                        SPLanguage: 'es',
                        SPTitle: SPTitle,
                        SPPdfName: SPPdfName,

                        // RU
                        RULanguage: 'ru',
                        RUTitle: RUTitle,
                        RUPdfName: RUPdfName,

                    },
                    success: function (fp, object) {
                        Ext.getBody().unmask();
                        SpotlightStore.reload();
                            Ext.getCmp("viewport").setActiveItem('SpotlightGrid');
                    },
                    failure: function (obj, res) {
                        Ext.getBody().unmask();
                        if (res) {
                            Ext.Msg.alert(
                                "INFO",
                                "Spotlight updated successfully."
                            );
                            form.reset();
                            SpotlightStore.reload();
                            Ext.getCmp("viewport").setActiveItem('SpotlightGrid');
                        } else {
                            Ext.Msg.alert(
                                "ERROR",
                                "Failed to update new spotlight. Contact your IT team."
                            );
                        }
                    },
                });
            };


            var deleteSpotlight = function () {
                const selectedRecord = Ext.getCmp("SpotlightGrid")
                    .getSelectionModel()
                    .getSelection()[0];
                Ext.Msg.confirm('Confirm delete', "Are you sure you want to remove this spotlight ?", function (btn, text) {
                    if (btn == 'yes') {
                        Ext.getBody().mask('Deleting', 'x-msg-loading');
                        Ext.Ajax.request({
                            url: "/apiSpotlight/deleteSpotlight",
                            method: "POST",
                            cors: true,
                            useDefaultXhrHeader: false,
                            params: {
                                Id: selectedRecord.data.Id
                            },
                            success: function (response) {
                                // check for errors and display error message
                                var check = response.responseText;
                                if (check) {
                                    var data = eval("(" + response.responseText + ")");

                                    if (data.serverStatus == 2) {
                                        SpotlightStore.reload();
                                        Ext.getBody().unmask();
                                        Ext.Msg.alert(
                                            "Success",
                                            "You have successfully deleted the spotlight"
                                        );
                                    } else {
                                        // display error message
                                        Ext.getBody().unmask();
                                        Ext.Msg.alert(
                                            "ERROR",
                                            "Failed to delete the spotlight. Contact your IT team."
                                        );
                                    }
                                }
                            },
                            failure: function (response) {
                                Ext.getBody().unmask();
                                Ext.Msg.alert(
                                    "ERROR",
                                    "Failed to delete spotlight. Contact your IT team."
                                );
                            },

                        });
                    }
                })
            }

            var TabTranslations = Ext.create('Ext.TabPanel', {
                fullscreen: true,
                tabBarPosition: 'bottom',
                id: 'tabTrans',
                defaults: {
                    styleHtmlContent: true
                },

                items: [
                    {
                        title: 'English',
                        items: [
                            {
                                xtype: "fieldset",
                                title: "English Translations",
                                anchor: "100%",
                                hidden: false,
                                id: "ENFIELD",
                                layoutConfig: {
                                    // The total column count must be specified here
                                    columns: 9,
                                },
                                items: [
                                    {
                                        layout: {
                                            type: 'hbox',
                                            align: 'stretch'
                                        },
                                        border: false,
                                        items: [
                                            {
                                                xtype: 'my-form',
                                                width: '40%',
                                                frame: false,
                                                id: 'formEN',
                                                border: false,
                                                items: [
                                                    {
                                                        xtype: "textfield",
                                                        id: "ENName",
                                                        name: "ENName",
                                                        fieldLabel: "Title",
                                                        maxLenght: 118,
                                                        width: 500,
                                                        allowBlank: false,
                                                        submitvalue: true,
                                                        margin: "25 0 25 0",
                                                    },
                                                    {
                                                        xtype: 'filefield',
                                                        id: 'ENpdf',
                                                        name: 'ENpdf',
                                                        fieldLabel: 'PDF',
                                                        labelWidth: 50,
                                                        msgTarget: 'side',
                                                        allowBlank: true,
                                                        accept: '.pdf',
                                                        anchor: '100%',
                                                        buttonText: 'Select PDF...'
                                                    }
                                                ]
                                            },

                                        ]
                                    },
                                ],
                            },
                        ]
                    },

                    {
                        title: 'French',

                        items: [
                            {
                                xtype: "fieldset",
                                title: "French Translations",
                                anchor: "100%",
                                hidden: false,
                                id: "FRFIELD",
                                layoutConfig: {
                                    // The total column count must be specified here
                                    columns: 9,
                                },
                                items: [
                                    {
                                        layout: {
                                            type: 'hbox',
                                            align: 'stretch'
                                        },
                                        border: false,
                                        items: [
                                            {
                                                xtype: 'my-form',
                                                width: '40%',
                                                frame: false,
                                                id: 'formFR',
                                                border: false,
                                                items: [

                                                    {
                                                        xtype: "textfield",
                                                        id: "FRName",
                                                        name: "FRName",
                                                        fieldLabel: "Title",
                                                        maxLenght: 118,
                                                        width: 500,
                                                        allowBlank: true,
                                                        submitvalue: true,
                                                        margin: "25 0 25 0",
                                                    },
                                                    {
                                                        xtype: 'filefield',
                                                        id: 'FRpdf',
                                                        name: 'FRpdf',
                                                        fieldLabel: 'PDF',
                                                        labelWidth: 50,
                                                        msgTarget: 'side',
                                                        allowBlank: true,
                                                        accept: '.pdf',
                                                        anchor: '100%',
                                                        buttonText: 'Select PDF...'
                                                    }

                                                ]
                                            },
                                        ]
                                    },
                                ],
                            },
                        ]
                    },
                    {
                        title: 'German',

                        items: [
                            {
                                xtype: "fieldset",
                                title: "German Translations",
                                anchor: "100%",
                                hidden: false,
                                id: "DEFIELD",
                                layoutConfig: {
                                    // The total column count must be specified here
                                    columns: 9,
                                },
                                items: [
                                    {
                                        layout: {
                                            type: 'hbox',
                                            align: 'stretch'
                                        },
                                        border: false,
                                        items: [
                                            {
                                                xtype: 'my-form',
                                                width: '40%',
                                                frame: false,
                                                border: false,
                                                id: 'formDE',
                                                items: [

                                                    {
                                                        xtype: "textfield",
                                                        id: "DEName",
                                                        name: "DEName",
                                                        fieldLabel: "Title",
                                                        maxLenght: 118,
                                                        width: 500,
                                                        allowBlank: true,
                                                        submitvalue: true,
                                                        margin: "25 0 25 0",
                                                    },
                                                    {
                                                        xtype: 'filefield',
                                                        id: 'DEpdf',
                                                        name: 'DEpdf',
                                                        fieldLabel: 'PDF',
                                                        labelWidth: 50,
                                                        msgTarget: 'side',
                                                        accept: '.pdf',
                                                        allowBlank: true,
                                                        anchor: '100%',
                                                        buttonText: 'Select PDF...'
                                                    }

                                                ]
                                            },

                                        ]
                                    },
                                ],
                            },
                        ]
                    },
                    {
                        title: 'Spanish',

                        items: [
                            {
                                xtype: "fieldset",
                                labelStyle: "font-weight: bold; ",
                                title: "Spanish Translations",
                                anchor: "100%",
                                hidden: false,
                                id: "SPFIELD",
                                layoutConfig: {
                                    // The total column count must be specified here
                                    columns: 9,
                                },
                                items: [
                                    {
                                        layout: {
                                            type: 'hbox',
                                            align: 'stretch'
                                        },
                                        border: false,
                                        items: [
                                            {
                                                xtype: 'my-form',
                                                width: '40%',
                                                frame: false,
                                                id: 'formSP',
                                                border: false,
                                                items: [

                                                    {
                                                        xtype: "textfield",
                                                        id: "SPName",
                                                        name: "SPName",
                                                        fieldLabel: "Title",
                                                        allowBlank: true,
                                                        maxLenght: 118,
                                                        width: 500,
                                                        submitvalue: true,
                                                        margin: "25 0 25 0",
                                                    },
                                                    {
                                                        xtype: 'filefield',
                                                        id: 'SPpdf',
                                                        name: 'SPpdf',
                                                        fieldLabel: 'PDF',
                                                        accept: '.pdf',
                                                        labelWidth: 50,
                                                        msgTarget: 'side',
                                                        allowBlank: true,
                                                        anchor: '100%',
                                                        buttonText: 'Select PDF...'
                                                    }

                                                ]
                                            },

                                        ]
                                    },
                                ],
                            },
                        ]
                    },
                    {
                        title: 'Russian',

                        items: [
                            {
                                xtype: "fieldset",
                                title: "Russian Translations",
                                anchor: "100%",
                                hidden: false,
                                id: "RUFIELD",
                                layoutConfig: {
                                    // The total column count must be specified here
                                    columns: 9,
                                },
                                items: [
                                    {
                                        layout: {
                                            type: 'hbox',
                                            align: 'stretch'
                                        },
                                        border: false,
                                        items: [
                                            {
                                                xtype: 'my-form',
                                                width: '40%',
                                                frame: false,
                                                id: 'formRU',
                                                border: false,
                                                items: [

                                                    {
                                                        xtype: "textfield",
                                                        id: "RUName",
                                                        name: "RUName",
                                                        fieldLabel: "Title",
                                                        maxLenght: 118,
                                                        allowBlank: true,
                                                        width: 500,
                                                        submitvalue: true,
                                                        margin: "25 0 25 0",
                                                    },
                                                    {
                                                        xtype: 'filefield',
                                                        name: 'RUpdf',
                                                        accept: '.pdf',
                                                        id: 'RUpdf',
                                                        fieldLabel: 'PDF',
                                                        width: 500,
                                                        msgTarget: 'side',
                                                        allowBlank: true,
                                                        buttonText: 'Select PDF...'
                                                    }

                                                ]
                                            },

                                        ]
                                    },
                                ],
                            },
                        ]
                    },
                ]
            });

            var itemsAdd = [

                {
                    xtype: "textfield",
                    id: "WorkingTitle",
                    name: "WorkingTitle",
                    fieldLabel: "Working Title",

                    width: 500,
                    allowBlank: true,
                    selectOnFocus: false,
                    margin: "25 0 25 0",
                },
                {
                    xtype: "datefield",
                    id: "Dates",
                    name: "Dates",
                    fieldLabel: "Date",
                    format: 'd-m-Y',
                    width: 500,
                    allowBlank: true,
                    selectOnFocus: false,
                    margin: "25 0 25 0",
                },
                {
                    xtype: 'filefield',
                    id: 'Visual',
                    name: 'Visual',
                    fieldLabel: 'Visual',
                    accept: 'image/*',
                    width: 500,
                    msgTarget: 'side',
                    allowBlank: false,
                    buttonText: 'Select photo...'
                },
                TabTranslations
            ];

            var screenAdd = new Ext.FormPanel({
                frame: false,
                header: false,
                border: false,
                defaults: {
                    labelAlign: "right",
                    labelWidth: 105,
                    listeners: {
                        specialkey: function (field, e) {
                            if (e.getKey() == e.ENTER) {
                                updateRec();
                            }
                            if (e.getKey() == e.ESC) {
                                Ext.getCmp("viewport").setActiveItem("SpotlightGrid");
                            }
                        },
                    },
                },
                width: '100%',
                waitMsgTarget: true,
                autoScroll: true,
                style: "padding: 3px 3px 3px 3px;",
                items: [
                    {
                        layout: "column",
                        layoutConfig: {
                            columns: 2,
                        },
                        border: false,
                        items: [
                            {
                                xtype: 'my-form',
                                id: "addForm",
                                columnWidth: 1,
                                border: false,
                                items: itemsAdd,
                            },
                        ],
                    },
                ],
            });

            // outer panel container to hold tbar and keypress definitions
            var panelAdd = new Ext.Panel({
                layout: "fit",
                id: "panelAdd",
                title: "Add product",
                header: true,
                items: [screenAdd],
                tbar: [
                    {
                        text: "Save",
                        id: "addSave",
                        iconCls: "fas fa-save",
                        handler: function () {
                            console.log('rigth button')
                            if (Ext.getCmp('addForm').isValid()) {
                                console.log('is valid')
                                addSpotlight();
                                Ext.getCmp('addForm').reset()
                            } else {
                                console.log('not valid')
                            }
                        },
                    },
                    {
                        text: "Save",
                        id: "editSave",
                        iconCls: "fas fa-save",
                        handler: function () {
                            if (Ext.getCmp('addForm').isValid()) {
                                edit = false;
                                editSpotlight();
                                Ext.getCmp("addForm").reset();
                            }
                        },
                    },
                    "-",
                    {
                        text: "Cancel",
                        tooltip: "Cancel",
                        id: 'cancel',
                        iconCls: "fas fa-undo",
                        handler: function () {
                            edit = false;
                            Ext.getCmp('addForm').reset();
                            Ext.getCmp("viewport").setActiveItem("SpotlightGrid");
                        },
                    },
                ],
            });


            Ext.create("Ext.container.Viewport", {
                id: "viewport",
                layout: "card",
                activeItem: 0,
                items: [SpotlightGrid, panelAdd],
            });
        });

    </script>
</head>

<body>
    <div id="small-view">
        This Appplication is not meant for small devices.
    </div>
</body>

</html>