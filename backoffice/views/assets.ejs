<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>ITE BACK OFFICE MANAGEMENT</title>
    <link rel="stylesheet" type="text/css"
        href="https://cdnjs.cloudflare.com/ajax/libs/extjs/6.0.0/classic/theme-neptune/resources/theme-neptune-all.css" />
    <script src="https://kit.fontawesome.com/ade53cd309.js" crossorigin="anonymous"></script>
    <script type="text/javascript" src="/controller/userAuthServices.js"></script>
    <!-- ----------------------------- DEVELOPMENT ----------------------------- -->
    <!-- <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/extjs/6.0.0/ext-all.js"></script> -->

    <!-- ----------------------------- PRODUCTION ------------------------------ -->
    <script type="text/javascript" src="/extjs/ext-all-debug.js"></script>
    <style>
        .x-grid-view {
            overflow-y: auto !important;
            position: relative;
        }


        #small-view {
            display: none;
        }

        @media (max-width: 481px) {
            #AssetsGrid {
                display: none !important;
            }

            #small-view {
                margin-top: 4rem;
                font-size: 40px;
                height: 100vh;
                width: 100vw;
                line-height: 50px;
                display: block !important;
            }
        }

        #ENFIELD-legendTitle,
        #SPFIELD-legendTitle,
        #FRFIELD-legendTitle,
        #DEFIELD-legendTitle,
        #RUFIELD-legendTitle {
            font-weight: bold;
        }
    </style>
    <script type="text/javascript">
        //=========================================================================================================
        //		           APPLICATION START
        // ========================================================================================================
        Ext.onReady(() => {
            // // FOR TESTING 
            // let userRightObject = {
            //     english: "V",
            //     french: "V",
            //     german: "E",
            //     pictures: "V",
            //     related: "E",
            //     russian: "E",
            //     spanish: "E",
            //     usrid: "AG",
            //     usrname: "Ann De Gucht"
            // };

            // let userRightString = JSON.stringify(userRightObject);
            // localStorage.setItem('userRights', userRightString);

            // // =============================================

            let edit = false;
            let wichGrid = true;

            Ext.define('MyApp.view.Form', {
                extend: 'Ext.form.Panel',
                xtype: 'my-form',

            });

            var renderImage = function (val) {
                return '<img src="/pictures/' + val + '" width="100" height="100">'
            }

            const mainGridColumns = [
                {
                    header: "ID",
                    sortable: true,
                    width: 80,
                    dataIndex: "Id",
                },
                {
                    header: "Images",
                    sortable: true,
                    width: 130,
                    dataIndex: "Path",
                    renderer: renderImage
                },
                {
                    header: "Product ID",
                    sortable: true,
                    width: 100,
                    dataIndex: "ProductId",
                },
                {
                    header: "Code",
                    sortable: true,
                    width: 100,
                    dataIndex: "CODE",

                },
                {
                    header: "Catalog",
                    sortable: true,
                    width: 400,
                    dataIndex: "Catalog",
                },
                {
                    header: "Type",
                    sortable: true,
                    width: 150,
                    dataIndex: "Type",
                },
                {
                    header: "Label",
                    sortable: true,
                    width: 200,
                    dataIndex: "Label",
                },
                {
                    header: "Path",
                    sortable: true,
                    width: 200,
                    dataIndex: "Path",
                },
                {
                    header: "Sequence",
                    sortable: true,
                    width: 100,
                    dataIndex: "Sequence",
                    field: {
                        xtype: 'numberfield',
                        allowBlank: true,
                        decimalPrecision: 0,
                        minValue: 0,
                        onFocusLeave: function (e) {
                            var me = this

                            var selectedrecords = AssetsGrid.getSelectionModel().getSelection();
                            var teller = selectedrecords.length;
                            currentsubfileRecord = selectedrecords[0];

                            Ext.Ajax.request({

                                url: '/apiAssets/updateSequence',
                                params: {
                                    Id: currentsubfileRecord.data.Id,
                                    Sequence: currentsubfileRecord.data.Sequence,

                                },
                                success: function (response) {

                                    // check for errors and display error message
                                    var check = response.responseText;
                                    if (check) {
                                        var data = eval("(" + response.responseText + ")");
                                        if (data) {
                                            // Remember record id's to reselect records after update of the row
                                            var selectedrecords = AssetsGrid.getSelectionModel().getSelection();
                                            recordIds = [];
                                            selectedIdx = [];
                                            for (var i = 0, len = selectedrecords.length; i < len; i++) {
                                                recordIds[i] = selectedrecords[i].id;
                                                selectedIdx[i] = AssetsGrid.getStore().indexOfId(recordIds[i]);
                                            }
                                            // reload subfile			
                                            AssetsStore.reload(
                                                // reselect records after update	
                                                {
                                                    callback: function () {
                                                        for (var i = 0, len = selectedIdx.length; i < len; i++) {
                                                            AssetsGrid.getSelectionModel().select(selectedIdx[i]);
                                                        }
                                                    },
                                                    scope: this
                                                }
                                            );
                                            // display subfile
                                            Ext.getCmp('viewport').layout.setActiveItem('AssetsGrid');
                                        } else {
                                            // display error message
                                            f = Ext.getCmp(data.FLD);
                                            f.markInvalid(data.MSG);
                                            f.focus();
                                        };
                                        Ext.getBody().unmask();
                                    };
                                },
                                failure: function (response) {
                                    Ext.getBody().unmask();
                                }
                            });
                        }
                    },
                },

            ];



            const tbarItems = [
                {
                    xtype: "toolbar",
                    dock: "top",
                    id: "bottomToolBar",
                    items: [
                        {
                            xtype: "button",
                            id: "addBtn",
                            iconCls: "fa fa-plus-circle",
                            text: "New",
                            scale: "small",
                            handler: function () {
                                Ext.getCmp("addSave").setHidden(false);
                                Ext.getCmp("editSave").setHidden(true);
                                Ext.getCmp("panelAdd").setTitle("Add assets");
                                Ext.getCmp("viewport").setActiveItem("panelAdd");
                            },
                        },
                        "-",
                        {
                            xtype: "button",
                            id: "editBtn",
                            text: "Edit",
                            iconCls: "fa fa-edit",
                            scale: "small",
                            handler: function () {
                                edit = true;

                                const selectedRecord = Ext.getCmp("AssetsGrid")
                                    .getSelectionModel()
                                    .getSelection()[0];

                                if (selectedRecord === undefined) {
                                    Ext.Msg.alert("INFO", "No record selected");
                                } else {
                                    sessionStorage.setItem('Id', selectedRecord.data.Id)
                                    sessionStorage.setItem('oldPath', selectedRecord.data.Path)
                                    Ext.getCmp("ProductDesc").setValue(selectedRecord.data.ProductId)
                                    Ext.getCmp("Type").setValue(selectedRecord.data.Type)
                                    Ext.getCmp("image").setValue(renderImage() + selectedRecord.data.Path)
                                    Ext.getCmp("Label").setValue(selectedRecord.data.Label)
                                    //Ext.getCmp("Sequence").setValue(selectedRecord.data.Sequence)
                                    Ext.getCmp("addSave").setHidden(true);
                                    Ext.getCmp("editSave").setHidden(false);
                                    Ext.getCmp("panelAdd").setTitle("Edit assets");

                                    Ext.getCmp("viewport").setActiveItem("panelAdd");
                                }
                            },
                        },
                        "-",
                        {
                            xtype: "button",
                            id: "delete",
                            text: "Delete",
                            iconCls: "fa fa-trash-alt",
                            scale: "small",
                            handler: function () {
                                deleteAssets()
                            },
                        },
                        "-",
                        {
                            xtype: "button",
                            id: "SerieAssets",
                            text: "Overview Serie Assets",
                            iconCls: "fa fa-tasks",
                            scale: "small",
                            handler: function () {
                                wichGrid = false;
                                Ext.getCmp('AssetsGrid').getSelectionModel().deselectAll()
                                Ext.getCmp("viewport").setActiveItem('AssetsSerieGrid')
                            },
                        },
                        "-",
                        {
                            xtype: "button",
                            id: "convertImages",
                            text: "Convert Images",
                            scale: "small",
                            handler: function () {

                                Ext.Msg.confirm('INFO', 'Start to convert all images in assets? It will take about 3mins.', (btn) => {
                                    if (btn === 'yes') {
                                        Ext.getBody().mask("Converting Images", "x-msg-loading");
                                        setTimeout(() => {
                                            Ext.getBody().unmask();
                                            Ext.Msg.alert("INFO", "Images converted successfully")
                                        }, 200000)
                                        Ext.Ajax.request({
                                            url: "/apiAssets/convertImages",
                                            method: "POST",
                                            cors: true,
                                            useDefaultXhrHeader: false,
                                            params: {
                                                test: 'convertImages'
                                            },
                                            success: function (response) {
                                                const res = JSON.parse(response.responseText);
                                            },
                                            // failure: function (response) {
                                            //     Ext.getBody().unmask();
                                            //     console.log(response);
                                            //     Ext.Msg.alert("INFO", "Converting failed.")
                                            // },
                                        });
                                    }
                                })

                            },
                        },
                    ],
                },
                {
                    xtype: "toolbar",
                    dock: "top",
                    id: "searchBar",
                    items: [
                        {
                            xtype: "textfield",
                            id: "searchKey",
                            iconCls: "fa fa-search",
                            width: 200,
                            labelWidth: 20,
                            emptyText: "Search Key",
                            enableKeyEvents: true,
                            listeners: {

                                change: () => {
                                    searchAssetsProduct('searchKey')

                                }
                            },
                        },

                        {
                            xtype: "button",
                            id: "resetSearch",
                            iconCls: "fas fa-undo-alt",
                            text: "reset",
                            style: "padding: 7px; border: none; background-color: #000",
                            listeners: {
                                click: () => {
                                    Ext.getCmp("searchKey").setValue("");
                                    AssetsStore.reload();
                                },
                            },
                        },
                    ],
                },
            ];

            const tbarItemsSeries = [

                {
                    xtype: "toolbar",
                    dock: "top",
                    id: "bottomToolBarSeries",
                    items: [
                        {
                            xtype: "button",
                            id: "addSeries",
                            iconCls: "fa fa-plus-circle",
                            text: "New",
                            scale: "small",
                            handler: function () {

                                Ext.getCmp("addSave").setHidden(false);
                                Ext.getCmp("editSave").setHidden(true);
                                Ext.getCmp("panelAdd").setTitle("Add assets");
                                Ext.getCmp("viewport").setActiveItem("panelAdd");
                            },
                        },
                        "-",
                        {
                            xtype: "button",
                            id: "editSeries",
                            text: "Edit",
                            iconCls: "fa fa-edit",
                            scale: "small",
                            handler: function () {
                                edit = true;

                                const selectedRecord = Ext.getCmp("AssetsSerieGrid")
                                    .getSelectionModel()
                                    .getSelection()[0];
                                if (selectedRecord === undefined) {
                                    Ext.Msg.alert("INFO", "No record selected");
                                } else {
                                    sessionStorage.setItem('Id', selectedRecord.data.Id)
                                    sessionStorage.setItem('oldPath', selectedRecord.data.Path)
                                    Ext.getCmp("ProductDesc").setValue(selectedRecord.data.SerieId)
                                    Ext.getCmp("Type").setValue(selectedRecord.data.Type)
                                    //Ext.getCmp("Path").setValue(selectedRecord.data.Path)
                                    Ext.getCmp("Label").setValue(selectedRecord.data.Label)
                                    //Ext.getCmp("Sequence").setValue(selectedRecord.data.Sequence)
                                    Ext.getCmp("addSave").setHidden(true);
                                    Ext.getCmp("editSave").setHidden(false);
                                    Ext.getCmp("panelAdd").setTitle("Edit assets");

                                    Ext.getCmp("viewport").setActiveItem("panelAdd");
                                }
                            },
                        },
                        "-",
                        {
                            xtype: "button",
                            id: "deleteSeries",
                            text: "Delete",
                            iconCls: "fa fa-trash-alt",
                            scale: "small",
                            handler: function () {
                                deleteAssets()
                            },
                        },
                        "-",
                        {
                            xtype: "button",
                            id: "ProductAssets",
                            text: "Overview Products Assets",
                            iconCls: "fa fa-tasks",
                            scale: "small",
                            handler: function () {
                                wichGrid = true;
                                Ext.getCmp('AssetsSerieGrid').getSelectionModel().deselectAll()
                                Ext.getCmp("viewport").setActiveItem('AssetsGrid')
                            },
                        },


                    ],
                },
                {
                    xtype: "toolbar",
                    dock: "top",
                    id: "searchBarSeries",
                    items: [
                        {
                            xtype: "textfield",
                            id: "searchKeySerie",
                            iconCls: "fa fa-search",
                            width: 200,
                            labelWidth: 20,
                            emptyText: "Search by code",
                            enableKeyEvents: true,
                            listeners: {

                                change: () => {
                                    searchAssetsSeries('searchKeySerie')

                                }
                            },
                        },

                        {
                            xtype: "button",
                            id: "resetSearchSerie",
                            iconCls: "fas fa-undo-alt",
                            text: "reset",
                            style: "padding: 7px; border: none; background-color: #000",
                            listeners: {
                                click: () => {
                                    Ext.getCmp("searchKeySerie").setValue("");
                                    SeriesAssetsStore.reload();
                                },
                            },
                        },
                    ],
                },
            ];

            const SeriesAssetsModel = Ext.define("AssetsModel", {
                extend: "Ext.data.Model",
                fields: ["Id", "ProductId", "SerieId", "Type", "Path", "Label", "Sequence", "CODE", "Catalog"],
            });

            const SeriesAssetsStore = Ext.create("Ext.data.Store", {
                id: "SeriesAssetsStore",
                autoLoad: true,
                model: SeriesAssetsModel,
                proxy: {
                    type: "ajax",
                    method: "GET",
                    url: "/apiAssets/getSeriesAssets",
                    noCache: true,
                    reader: {
                        type: "json",
                    },

                    cors: true,
                    useDefaultXhrHeader: false,
                },
            });

            const searchAssetsSeries = (searchField) => {
                let searchQuery = Ext.getCmp(searchField).getValue();
                Ext.Ajax.request({
                    url: "/apiAssets/searchAssetsSeries",
                    method: "POST",
                    cors: true,
                    useDefaultXhrHeader: false,
                    params: {
                        searchQuery: searchQuery,
                    },
                    success: function (response) {
                        const res = JSON.parse(response.responseText);

                        res
                            ? SeriesAssetsStore.setData(res)
                            : console.log("no response received");
                    },
                    failure: function (response) {
                        console.log("failed", response);
                    },
                });
            };

            var TypeStore = Ext.create("Ext.data.Store", {
                fields: ["TypeCode", "TypeName"],
                data: [
                    { TypeCode: "product-image", TypeName: "Product" },
                    { TypeCode: "serie-image", TypeName: "Serie" }
                ],
                storeId: "TypeStore",
            });

            const ProductDet = Ext.define("ProductDet", {
                extend: "Ext.data.Model",
                fields: ["CODE", "Id"],
            });

            const ProductDetStore = Ext.create("Ext.data.Store", {
                id: "ProductDetStore",
                autoLoad: true,
                model: ProductDet,
                proxy: {
                    type: "ajax",
                    method: "GET",
                    url: "/apiAssets/getProductDet",
                    noCache: true,
                    reader: {
                        type: "json",
                    },
                    cors: true,
                    useDefaultXhrHeader: false,
                },
            });

            const SeriesDet = Ext.define("SeriesDet", {
                extend: "Ext.data.Model",
                fields: ["Sid", "Key"],
            });

            const SeriesDetStore = Ext.create("Ext.data.Store", {
                id: "SeriesDetStore",
                autoLoad: true,
                model: SeriesDet,
                proxy: {
                    type: "ajax",
                    method: "GET",
                    url: "/apiAssets/getSeriesDet",
                    noCache: true,
                    reader: {
                        type: "json",
                    },
                    cors: true,
                    useDefaultXhrHeader: false,
                },
            });



            var itemsAdd2 = [
                {
                    xtype: "combo",
                    id: "Type",
                    name: "Type",
                    store: TypeStore,
                    width: 500,
                    fieldLabel: "Type",
                    displayField: "TypeName",
                    valueField: "TypeCode",
                    allowBlank: false,
                    selectOnFocus: false,
                    editable: false,
                    listeners: {
                        change: function () {
                            if (this.getValue() == 'product-image') {
                                Ext.getCmp('ProductDesc').setStore(ProductDetStore)

                            } else {
                                Ext.getCmp('ProductDesc').setStore(SeriesDetStore)
                            }

                        }
                    }
                },
                {
                    xtype: "combo",
                    id: "ProductDesc",
                    name: "ProductDesc",
                    width: 500,
                    fieldLabel: "Products/Series",
                    displayField: 'CODE',
                    valueField: 'Id',
                    emptyText: 'Please choose a type first..',
                    allowBlank: false,
                    selectOnFocus: false,
                    anyMatch: true,
                    queryMode: "local",

                },
                {
                    xtype: 'filefield',
                    accept: 'image/*',
                    id: 'image',
                    name: 'image',
                    fieldLabel: 'Select an Image',
                    style: "margin: 10px 0px;",
                    allowBlank: false,
                    width: 500,
                },
                {
                    xtype: 'textfield',
                    fieldLabel: 'Label',
                    id: "Label",
                    name: "Label",
                    allowBlank: true,
                    maxLenght: 255,
                    width: 500,
                }

            ];


            const SeriesGridColumns = [
                {
                    header: "ID",
                    sortable: true,
                    width: 80,
                    dataIndex: "Id",
                },
                {
                    header: "Images",
                    sortable: true,
                    width: 130,
                    dataIndex: "Path",
                    renderer: renderImage
                },
                {
                    header: "Serie ID",
                    sortable: true,
                    width: 100,
                    dataIndex: "SerieId",
                },
                {
                    header: "Key",
                    sortable: true,
                    width: 150,
                    dataIndex: "Key",
                },
                {
                    header: "Title",
                    sortable: true,
                    width: 300,
                    dataIndex: "Title",
                },

                {
                    header: "Type",
                    sortable: true,
                    width: 150,
                    dataIndex: "Type",
                },
                {
                    header: "Label",
                    sortable: true,
                    width: 200,
                    dataIndex: "Label",
                },
                {
                    header: "Path",
                    sortable: true,
                    width: 200,
                    dataIndex: "Path",
                },
                {
                    header: "Sequence",
                    sortable: true,
                    width: 100,
                    dataIndex: "Sequence",
                    field: {
                        xtype: 'numberfield',
                        allowBlank: true,
                        decimalPrecision: 0,
                        minValue: 0,

                        onFocusLeave: function (e) {
                            var me = this

                            var selectedrecords = AssetsSerieGrid.getSelectionModel().getSelection();
                            var teller = selectedrecords.length;
                            currentsubfileRecord = selectedrecords[0];
                            Ext.Ajax.request({

                                url: '/apiAssets/updateSequence',
                                params: {
                                    Id: currentsubfileRecord.data.Id,
                                    Sequence: currentsubfileRecord.data.Sequence,

                                },
                                success: function (response) {

                                    // check for errors and display error message
                                    var check = response.responseText;
                                    if (check) {
                                        var data = eval("(" + response.responseText + ")");
                                        if (data) {
                                            // Remember record id's to reselect records after update of the row
                                            var selectedrecords = AssetsSerieGrid.getSelectionModel().getSelection();
                                            recordIds = [];
                                            selectedIdx = [];
                                            for (var i = 0, len = selectedrecords.length; i < len; i++) {
                                                recordIds[i] = selectedrecords[i].id;
                                                selectedIdx[i] = AssetsSerieGrid.getStore().indexOfId(recordIds[i]);
                                            }
                                            // reload subfile			
                                            SeriesAssetsStore.reload(
                                                // reselect records after update	
                                                {
                                                    callback: function () {
                                                        for (var i = 0, len = selectedIdx.length; i < len; i++) {
                                                            AssetsSerieGrid.getSelectionModel().select(selectedIdx[i]);
                                                        }
                                                    },
                                                    scope: this
                                                }
                                            );
                                            // display subfile
                                            Ext.getCmp('viewport').layout.setActiveItem('AssetsSerieGrid');
                                        } else {
                                            // display error message
                                            f = Ext.getCmp(data.FLD);
                                            f.markInvalid(data.MSG);
                                            f.focus();
                                        };
                                        Ext.getBody().unmask();
                                    };
                                },
                                failure: function (response) {
                                    Ext.getBody().unmask();
                                }
                            });
                        }
                    },
                },

            ];

            const AssetsSerieGrid = Ext.create("Ext.grid.GridPanel", {
                id: "AssetsSerieGrid",
                bufferedRenderer: false,
                flex: 1,
                scrollable: true,
                title: "Assets - Series",
                trackOver: true,
                loadMask: true,
                store: SeriesAssetsStore, // store
                columns: SeriesGridColumns, //columns
                enableColumnMove: false,
                sortable: true,
                frame: false,
                height: 690,
                plugins: {
                    ptype: 'cellediting',
                    clicksToEdit: 1
                },
                dockedItems: [...tbarItemsSeries],

            });


            const AssetsModel = Ext.define("AssetsModel2", {
                extend: "Ext.data.Model",
                fields: ["Id", "ProductId", "SerieId", "Type", "Path", "Label", "Sequence", "CODE", "Catalog"],
            });

            const AssetsStore = Ext.create("Ext.data.Store", {
                id: "AssetsStore",
                autoLoad: true,
                model: AssetsModel,
                proxy: {
                    type: "ajax",
                    method: "GET",
                    url: "/apiAssets/getAssets",
                    noCache: true,
                    reader: {
                        type: "json",
                    },

                    cors: true,
                    useDefaultXhrHeader: false,
                },
            });

            const searchAssetsProduct = (searchField) => {
                let searchQuery = Ext.getCmp(searchField).getValue();
                Ext.Ajax.request({
                    url: "/apiAssets/searchAssetsProduct",
                    method: "POST",
                    cors: true,
                    useDefaultXhrHeader: false,
                    params: {
                        searchQuery: searchQuery,
                    },
                    success: function (response) {
                        const res = JSON.parse(response.responseText);

                        res
                            ? AssetsStore.setData(res)
                            : console.log("no response received");
                    },
                    failure: function (response) {
                        console.log("failed", response);
                    },
                });
            };

            // const AssetsGrid = Ext.create("Ext.grid.GridPanel", {
            //     id: "AssetsGrid",
            //     flex: 1,
            //     scrollable: true,
            //     title: "Assets - Products",
            //     trackOver: true,
            //     loadMask: true,
            //     store: AssetsStore, // store
            //     columns: mainGridColumns, //columns
            //     enableColumnMove: false,
            //     sortable: true,
            //     frame: false,
            //     selModel: 'cellmodel',
            //     plugins: {
            //         ptype: 'cellediting',
            //         clicksToEdit: 1
            //     },
            //     height: 690,
            //     dockedItems: [...tbarItems],
            //     listeners: {
            //         dblclick: {
            //             element: "body",
            //             fn: () => {

            //             },
            //             success: function (response) {

            //                 // check for errors and display error message
            //                 var check = response.responseText;
            //                 if (check) {
            //                     var data = eval("(" + response.responseText + ")");
            //                     if (data) {
            //                         // Remember record id's to reselect records after update of the row
            //                         var selectedrecords = AssetsSerieGrid.getSelectionModel().getSelection();
            //                         recordIds = [];
            //                         selectedIdx = [];
            //                         for (var i = 0, len = selectedrecords.length; i < len; i++) {
            //                             recordIds[i] = selectedrecords[i].id;
            //                             selectedIdx[i] = AssetsSerieGrid.getStore().indexOfId(recordIds[i]);
            //                         }
            //                         // reload subfile			
            //                         SeriesAssetsStore.reload(
            //                             // reselect records after update	
            //                             {
            //                                 callback: function () {
            //                                     for (var i = 0, len = selectedIdx.length; i < len; i++) {
            //                                         AssetsSerieGrid.getSelectionModel().select(selectedIdx[i]);
            //                                     }
            //                                 },
            //                                 scope: this
            //                             }
            //                         );
            //                         // display subfile
            //                         Ext.getCmp('viewport').layout.setActiveItem('AssetsSerieGrid');
            //                     } else {
            //                         // display error message
            //                         f = Ext.getCmp(data.FLD);
            //                         f.markInvalid(data.MSG);
            //                         f.focus();
            //                     };
            //                     Ext.getBody().unmask();
            //                 };
            //             },
            //             failure: function (response) {
            //                 Ext.getBody().unmask();
            //             }
            //         }
            //     }
            // })





            // const AssetsSerieGrid = Ext.create("Ext.grid.GridPanel", {
            //     id: "AssetsSerieGrid",
            //     flex: 1,
            //     scrollable: true,
            //     title: "Assets - Series",
            //     trackOver: true,
            //     loadMask: true,
            //     store: SeriesAssetsStore, // store
            //     columns: SeriesGridColumns, //columns
            //     enableColumnMove: false,
            //     sortable: true,
            //     frame: false,
            //     height: 690,
            //     selModel: 'cellmodel',
            //     plugins: {
            //         ptype: 'cellediting',
            //         clicksToEdit: 1
            //     },
            //     dockedItems: [...tbarItemsSeries],

            // });


            // const AssetsModel = Ext.define("AssetsModel", {
            //     extend: "Ext.data.Model",
            //     fields: ["Id", "ProductId", "SerieId", "Type", "Path", "Label", "Sequence", "CODE", "Catalog"],
            // });

            // const AssetsStore = Ext.create("Ext.data.Store", {
            //     id: "AssetsStore",
            //     autoLoad: true,
            //     model: AssetsModel,
            //     proxy: {
            //         type: "ajax",
            //         method: "GET",
            //         url: "/apiAssets/getAssets",
            //         noCache: true,
            //         reader: {
            //             type: "json",
            //         },

            //         cors: true,
            //         useDefaultXhrHeader: false,
            //     },
            // });

            const AssetsGrid = Ext.create("Ext.grid.GridPanel", {
                id: "AssetsGrid",
                bufferedRenderer: false,
                flex: 1,
                scrollable: true,
                title: "Assets - Products",
                trackOver: true,
                loadMask: true,
                store: AssetsStore, // store
                columns: mainGridColumns, //columns
                enableColumnMove: false,
                sortable: true,
                frame: false,
                selModel: 'cellmodel',
                plugins: {
                    ptype: 'cellediting',
                    clicksToEdit: 1
                },
                height: 690,
                dockedItems: [...tbarItems],
                listeners: {
                    dblclick: {
                        element: "body",
                        fn: () => {

                        },
                    },
                },
            });

            var getCheckboxValue = function () {

                if (Ext.getCmp('Translated').getValue() == true) {

                    return 1
                } else {
                    return 0
                }
            }


            var addAssets = function () {
                Ext.getBody().mask("Saving", "x-msg-loading");
                Ext.Ajax.request({
                    url: "/apiAssets/addAssets",
                    method: "POST",
                    cors: true,
                    useDefaultXhrHeader: false,
                    params: {
                        Type: Ext.getCmp("Type").getValue(),
                        ProductId: Ext.getCmp("ProductId").getValue(),
                        SerieId: Ext.getCmp("SerieId").getValue(),
                        Path: Ext.getCmp("SerieId").getValue(),
                        Label: Ext.getCmp("Label").getValue(),
                        Sequence: Ext.getCmp("Sequence").getValue(),

                    },
                    success: function (response) {
                        // check for errors and display error message
                        var check = response.responseText;
                        if (check) {
                            var data = JSON.parse(check);
                            if (data) {
                                Ext.getBody().unmask();
                                Ext.Msg.alert(
                                    "assets",
                                    `You have successfully add the assets`,
                                );
                                if (wichGrid == true) {
                                    Ext.getCmp("viewport").setActiveItem('AssetsGrid');
                                    AssetsStore.reload();
                                } else {
                                    Ext.getCmp("viewport").setActiveItem('AssetsSerieGrid');
                                    SeriesAssetsStore.reload();
                                }

                            } else {
                                // display error message
                                Ext.getBody().unmask();
                                Ext.Msg.alert(
                                    "ERROR",
                                    "Failed to add the assets. Contact your IT team."
                                );
                            }
                        }
                    },
                    failure: function (response) {
                        Ext.getBody().unmask();
                        Ext.Msg.alert(
                            "ERROR",
                            "Failed to add the assets. Contact your IT team."
                        );
                    }
                });
            };


            var deleteAssets = function () {

                const selectedRecordProd = Ext.getCmp("AssetsGrid")
                    .getSelectionModel()
                    .getSelection()[0];

                console.log('test ' + selectedRecordProd)
                const selectedRecordProdSer = Ext.getCmp("AssetsSerieGrid")
                    .getSelectionModel()
                    .getSelection()[0];
                if (selectedRecordProd != undefined) {
                    if (selectedRecordProd.data.Type == 'product-image') {
                        var selectedRecord = Ext.getCmp("AssetsGrid")
                            .getSelectionModel()
                            .getSelection()[0];
                        console.log(selectedRecord.data)
                    }

                } else {
                    var selectedRecord = Ext.getCmp("AssetsSerieGrid")
                        .getSelectionModel()
                        .getSelection()[0];
                        console.log(selectedRecord.data)
                }
                Ext.Msg.confirm('Confirm delete', "Are you sure you want to remove this assets ?", function (btn, text) {
                    if (btn == 'yes') {
                        
                        Ext.getBody().mask('Deleting', 'x-msg-loading');
                        Ext.Ajax.request({
                            url: "/apiAssets/deleteAssets",
                            method: "POST",
                            cors: true,
                            useDefaultXhrHeader: false,
                            params: {
                                itemId: selectedRecord.data.Id,
                                PathJPG: selectedRecord.data.Path
                            },
                            success: function (response) {
                                // check for errors and display error message
                                var check = response.responseText;
                                if (check) {
                                    var data = eval("(" + response.responseText + ")");

                                    if (data.serverStatus == 2) {
                                        SeriesAssetsStore.reload();
                                        AssetsStore.reload()
                                        Ext.getBody().unmask();
                                        Ext.Msg.alert(
                                            "Success",
                                            "You have successfully deleted the assets"
                                        );
                                    } else {
                                        // display error message
                                        Ext.getBody().unmask();
                                        Ext.Msg.alert(
                                            "ERROR",
                                            "Failed to delete the assets. Contact your IT team."
                                        );
                                    }
                                }
                            },
                            failure: function (response) {
                                Ext.getBody().unmask();
                                Ext.Msg.alert(
                                    "ERROR",
                                    "Failed to delete assets. Contact your IT team."
                                );
                            },

                        });
                    }
                })

            }


            var screenAdd = new Ext.FormPanel({
                frame: false,
                header: false,
                border: false,
                defaults: {
                    labelAlign: "right",
                    labelWidth: 105,
                    listeners: {
                        specialkey: function (field, e) {
                            if (e.getKey() == e.ENTER) {
                                updateRec();
                            }
                            if (e.getKey() == e.ESC) {
                                Ext.getCmp("viewport").setActiveItem("AssetsGrid");
                            }
                        },
                    },
                },
                width: '100%',
                waitMsgTarget: true,
                autoScroll: true,
                style: "padding: 3px 3px 3px 3px;",
                items: [
                    {
                        layout: "column",
                        layoutConfig: {
                            columns: 2,
                        },
                        border: false,
                        items: [
                            {
                                xtype: 'my-form',
                                id: "addForm",
                                columnWidth: 1,
                                border: false,

                                items: itemsAdd2,
                            },
                        ],

                    }]
            });

            // outer panel container to hold tbar and keypress definitions
            var panelAdd = new Ext.Panel({
                layout: "fit",
                id: "panelAdd",
                title: "Add product",
                header: true,
                items: [screenAdd],
                tbar: [
                    {
                        text: "Save",
                        id: "addSave",
                        iconCls: "fas fa-save",
                        handler: function () {
                            var form = Ext.getCmp('addForm')

                            if (Ext.getCmp('Type').getValue() == 'product-image') {
                                if (form.isValid()) {
                                    form.submit({
                                        url: '/apiAssets/uploadProductImage',
                                        headers: { 'Content-Type': 'multipart/form-data' },
                                        method: "POST",
                                        waitMsg: 'Uploading your photo...',
                                        params: {
                                            ProductId: Ext.getCmp('ProductDesc').getValue(),
                                            Label: Ext.getCmp('Label').getValue(),
                                        },
                                        success: function (fp, object) {
                                            form.reset();
                                            Ext.Msg.alert('Success', 'Your photo "' + object.result.file + '" has been uploaded.');
                                            Ext.getCmp('addForm').reset()
                                            if (wichGrid == true) {
                                                Ext.getCmp("viewport").setActiveItem('AssetsGrid');
                                                AssetsStore.reload()
                                            } else {
                                                Ext.getCmp("viewport").setActiveItem('AssetsSerieGrid');
                                                SeriesAssetsStore.reload()
                                            }
                                        },
                                        failure: (fp, object) => {

                                            if (object.result.isExist == "yes") {
                                                Ext.Msg.alert('Failed', "This file already exist, please change the name");
                                            } else {
                                                Ext.Msg.alert('Failed', "failed to upload image, please contact your IT Team");
                                            }
                                        }
                                    });
                                } else {
                                    Ext.Msg.alert("INFO", "Form is not valid!")
                                }

                            } else if (Ext.getCmp('Type').getValue() == 'serie-image') {
                                if (form.isValid()) {
                                    form.submit({
                                        url: '/apiAssets/uploadSerieImage',
                                        headers: { 'Content-Type': 'multipart/form-data' },
                                        method: "POST",
                                        waitMsg: 'Uploading your photo...',
                                        params: {
                                            SeriesId: Ext.getCmp('ProductDesc').getValue(),
                                            Label: Ext.getCmp('Label').getValue(),
                                        },
                                        success: function (fp, object) {
                                            form.reset();
                                            Ext.Msg.alert('Success', 'Your photo "' + object.result.file + '" has been uploaded.');
                                            Ext.getCmp('addForm').reset()
                                            if (wichGrid == true) {
                                                AssetsStore.reload()
                                                Ext.getCmp("viewport").setActiveItem('AssetsGrid');

                                            } else {
                                                SeriesAssetsStore.reload()

                                                Ext.getCmp("viewport").setActiveItem('AssetsSerieGrid');
                                            }
                                        },
                                        failure: (fp, object) => {

                                            if (object.result.isExist == "yes") {
                                                Ext.Msg.alert('Failed', "This file already exist, please change the name");
                                            } else {
                                                Ext.Msg.alert('Failed', "failed to upload image, please contact your IT Team");
                                            }
                                        }
                                    });
                                } else {
                                    Ext.Msg.alert("INFO", "Form is not valid!")
                                }
                            } else {
                                console.log('bug')
                            }

                        },
                    },
                    {
                        text: "Save",
                        id: "editSave",
                        iconCls: "fas fa-save",
                        handler: function () {
                            edit = false;
                            var form = Ext.getCmp('addForm')

                            if (Ext.getCmp('Type').getValue() == 'product-image') {
                                if (form.isValid()) {
                                    form.submit({
                                        url: '/apiAssets/updateuploadProductImage',
                                        headers: { 'Content-Type': 'multipart/form-data' },
                                        method: "POST",
                                        waitMsg: 'Uploading your photo...',
                                        params: {
                                            oldPath: sessionStorage.getItem('oldPath'),
                                            ProductId: Ext.getCmp('ProductDesc').getValue(),
                                            Label: Ext.getCmp('Label').getValue(),
                                        },
                                        success: function (fp, object) {
                                            form.reset();
                                            Ext.Msg.alert('Success', 'Your photo "' + object.result.file + '" has been uploaded.');
                                            Ext.getCmp('addForm').reset()

                                            if (wichGrid == true) {
                                                Ext.getCmp("viewport").setActiveItem('AssetsGrid');
                                                AssetsStore.reload()
                                            } else {
                                                Ext.getCmp("viewport").setActiveItem('AssetsSerieGrid');
                                                SeriesAssetsStore.reload()
                                            }
                                        },
                                        failure: (fp, object) => {
                                            if (object.result.isExist == "yes") {
                                                Ext.Msg.alert('Failed', "This file already exist, please change the name");
                                            } else {
                                                Ext.Msg.alert('Failed', "failed to upload image, please contact your IT Team");
                                            }
                                        }
                                    });
                                } else {
                                    Ext.Msg.alert("INFO", "Form is not valid!")
                                }

                            } else if (Ext.getCmp('Type').getValue() == 'serie-image') {
                                if (form.isValid()) {
                                    form.submit({
                                        url: '/apiAssets/updateuploadSerieImage',
                                        headers: { 'Content-Type': 'multipart/form-data' },
                                        method: "POST",
                                        waitMsg: 'Uploading your photo...',
                                        params: {
                                            oldPath: sessionStorage.getItem('oldPath'),
                                            SeriesId: Ext.getCmp('ProductDesc').getValue(),
                                            Label: Ext.getCmp('Label').getValue(),
                                        },
                                        success: function (fp, object) {
                                            form.reset();
                                            Ext.Msg.alert('Success', 'Your photo "' + object.result.file + '" has been uploaded.');
                                            Ext.getCmp('addForm').reset()
                                            if (wichGrid == true) {

                                                Ext.getCmp("viewport").setActiveItem('AssetsGrid');
                                                AssetsStore.reload()
                                            } else {

                                                Ext.getCmp("viewport").setActiveItem('AssetsSerieGrid');
                                                SeriesAssetsStore.reload()

                                            }

                                        },
                                        failure: (fp, object) => {
                                            if (object.result.isExist == "yes") {
                                                Ext.Msg.alert('Failed', "This file already exist, please change the name");
                                            } else {
                                                Ext.Msg.alert('Failed', "failed to upload image, please contact your IT Team");
                                            }
                                        }
                                    });
                                } else {
                                    Ext.Msg.alert("INFO", "Form is not valid!")
                                }
                            } else {
                                console.log('bug')
                            }
                        }
                    },
                    "-",
                    {
                        text: "Cancel",
                        tooltip: "Cancel",
                        id: 'cancel',
                        iconCls: "fas fa-undo",
                        handler: function () {
                            edit = false;
                            Ext.getCmp('addForm').reset();
                            if (wichGrid == true) {
                                Ext.getCmp("viewport").setActiveItem('AssetsGrid');

                            } else {
                                Ext.getCmp("viewport").setActiveItem('AssetsSerieGrid');

                            }
                        },
                    },
                ],
            });


            let userRights = JSON.parse(localStorage.getItem('userRights'));

            if (userRights !== null) {
                applyUserRights(userRights);
            }



            Ext.create("Ext.container.Viewport", {
                id: "viewport",
                layout: "card",
                activeItem: 0,
                items: [AssetsGrid, panelAdd, AssetsSerieGrid],
            });
        })

    </script>
</head>

<body>
    <div id="small-view">
        This Appplication is not meant for small devices.
    </div>
</body>

</html>