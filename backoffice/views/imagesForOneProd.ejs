<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>ALL PRODUCTS - ITE BACK OFFICE MANAGEMENT</title>
    <link rel="stylesheet" type="text/css"
        href="https://cdnjs.cloudflare.com/ajax/libs/extjs/6.0.0/classic/theme-neptune/resources/theme-neptune-all.css" />
    <script src="https://kit.fontawesome.com/ade53cd309.js" crossorigin="anonymous"></script>
    <script type="text/javascript" src="/controller/userAuthServices.js"></script>

    <!-- ----------------------------- DEVELOPMENT ----------------------------- -->
    <!-- <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/extjs/6.0.0/ext-all.js"></script> -->
    <!-- ----------------------------- PRODUCTION ------------------------------ -->

    <script type="text/javascript" src="/extjs/ext-all-debug.js"></script>

    <!-- <script type="text/javascript" src="/extTinyMce/TinyMceEditor.js"></script> -->
    <!-- <script type="text/javascript" src="/tinymce/tinymce.min.js"></script> -->
    <!-- <script type="text/javascript" src="/tinymce/jquery.tinymce.min.js"></script> -->

    <!-- <script src="https://cdn.tiny.cloud/1/no-api-key/tinymce/5/tinymce.min.js" referrerpolicy="origin"></script> -->

    <!-- cloud TinyMCE is requied with a key to allow Powerpaste -->
    <script src="https://cdn.tiny.cloud/1/lpt0c9449ad2wbuj1ih33yuaas6kwp7kc6uunblvgcun7cg9/tinymce/5/tinymce.min.js"
        referrerpolicy="origin"></script>



    <style>
        .x-grid-view {
            overflow-y: auto !important;
            position: relative;
        }

        .grid-image {
            width: auto;
            height: 70px;
        }

        .x-grid-cell-inner {
            overflow: hidden;
            padding: 10px 6px;
            white-space: nowrap;
        }

        .a span {
            background-color: rgb(253, 253, 253);
            padding: 2px;
            color: black;
        }

        .fieldClass {
            border-bottom: 1px dashed rgb(173, 173, 173);
            padding: 7px 0px;
        }

        textarea {
            height: 300px;

        }

        #ENFIELD-legendTitle,
        #ESFIELD-legendTitle,
        #FRFIELD-legendTitle,
        #DEFIELD-legendTitle,
        #RUFIELD-legendTitle {
            font-weight: bold;
        }

        #small-view {
            display: none;
        }

        @media (max-width: 481px) {

            #productDetails,


            #small-view {
                margin-top: 4rem;
                font-size: 40px;
                height: 100vh;
                width: 100vw;
                line-height: 50px;
                display: block !important;
            }
        }

        .x-autocontainer-outerCt {
            overflow-y: auto !important;
        }

        .x-boundlist-list-ct {
            overflow-y: auto !important;
        }

        .x-autocontainer-innerCt {
            overflow-y: auto !important;
        }

        .x-box-inner {
            overflow-y: auto !important;
        }

        .x-panel-body {
            overflow-y: auto !important;
        }
    </style>



    <script type="text/javascript">

        //=========================================================================================================
        //		           APPLICATION START
        // ========================================================================================================
        Ext.onReady(() => {
            // Settings
            let tinyMce_images_upload_url = "http://10.0.10.1:11080/back/upload.php";
            let tinyHeight = 500;
            const tinyplugins = [
                'advlist autolink lists link image charmap print preview anchor',
                'searchreplace visualblocks code fullscreen',
                'insertdatetime media table powerpaste code help wordcount',

            ];
            const tinycontent_style = 'body { font-family:Helvetica,Arial,sans-serif; font-size:13px }  p {margin-top: 0; margin-bottom: 0;} ul{ padding-left: 1rem;margin-bottom: 0;}';
            // // FOR TESTING 

            // let userRightObject = {
            //   english: "E",
            //   french: "V",
            //   german: "E",
            //   pictures: "V",
            //   related: "E",
            //   russian: "E",
            //   spanish: "E",
            //   usrid: "AG",
            //   usrname: "Ann De Gucht"
            // };

            // let userRightString = JSON.stringify(userRightObject);
            // localStorage.setItem('userRights', userRightString);

            // // =============================================

            let edit = false;
            let productIDGlobal = "";
            let serieIDGlobal = "";
            var pathArray = window.location.pathname.split('/');
            
            var getas400 = pathArray[2];
            productIDGlobal = getas400


            Ext.define('MyApp.view.Form', {
                extend: 'Ext.form.Panel',
                xtype: 'my-form',

            });

            const linkedImageModel = Ext.define("Images2", {
                extend: "Ext.data.Model",
                fields: ["Id", "Type", "Size", "Path", "Sequence"],
            });

            const linkedImageStore = Ext.create("Ext.data.Store", {
                id: "linkedImageStore",
                autoLoad: false,
                model: linkedImageModel,
                proxy: {
                    type: "ajax",
                    method: "GET",
                    url: "/apiProducts/getLinkedImageByAs400",
                    noCache: true,
                    reader: {
                        type: "json",
                    },
                    cors: true,
                    useDefaultXhrHeader: false,
                    
                },
                listeners: {
                    beforeload: function (store) {
                    },
                },
            });
            linkedImageStore.getProxy().setExtraParam('as400code', productIDGlobal);
                  linkedImageStore.reload();

            const linkedImageColumns = [
                {
                    header: "ID",
                    sortable: true,
                    width: 50,
                    dataIndex: "Id",
                    align: 'center'
                },
                {
                    header: "Type",
                    sortable: true,
                    width: 100,
                    dataIndex: "Type",
                    align: 'left'
                },
                {
                    header: "Image",
                    sortable: true,
                    width: 170,
                    dataIndex: "Path",
                    align: 'left',
                    renderer: (value) => {
                        return `<img src="/pictures/${value}" width="150" height="150">`;
                    }
                },
                {
                    header: "Sequence",
                    sortable: true,
                    width: 120,
                    dataIndex: "Sequence",
                    align: 'left',
                    editor: {
                        completeOnEnter: true,
                        field: {
                            xtype: "numberfield",
                            allowBlank: false,

                        },
                    },
                },
            ]


            const linkedImageGrid = Ext.create("Ext.grid.GridPanel", {
                id: "linkedImageGrid",
                bufferedRenderer: false,
                flex: 1,
                scrollable: true,
                title: "Linked Images",
                trackOver: true,
                loadMask: true,
                store: linkedImageStore,
                columns: linkedImageColumns,
                enableColumnMove: false,
                sortable: true,
                frame: false,
                renderTo: Ext.getBody(),
                height: 690,
                
            });



            let userRights = JSON.parse(localStorage.getItem('userRights'));
            if (userRights !== null) {
                applyUserRights(userRights);
            }

            //=========================================================================================================
            //		           VIEW PORT
            // ========================================================================================================

            Ext.create("Ext.container.Viewport", {
                id: "viewport",
                layout: "card",
                activeItem: 0,
                items: [linkedImageGrid],
            });
        });

    </script>
</head>

<body>
    <div id="small-view">
        This Appplication is not meant for small devices.
    </div>


</body>

</html>